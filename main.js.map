{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about-us/about-us.component.css","webpack:///./src/app/about-us/about-us.component.html","webpack:///./src/app/about-us/about-us.component.ts","webpack:///./src/app/add-policy/add-policy.component.css","webpack:///./src/app/add-policy/add-policy.component.html","webpack:///./src/app/add-policy/add-policy.component.ts","webpack:///./src/app/admin-add-claim-tracker/admin-add-claim-tracker.component.css","webpack:///./src/app/admin-add-claim-tracker/admin-add-claim-tracker.component.html","webpack:///./src/app/admin-add-claim-tracker/admin-add-claim-tracker.component.ts","webpack:///./src/app/admin-add-policy/admin-add-policy.component.css","webpack:///./src/app/admin-add-policy/admin-add-policy.component.html","webpack:///./src/app/admin-add-policy/admin-add-policy.component.ts","webpack:///./src/app/admin-all-claim-trackers/admin-all-claim-trackers.component.css","webpack:///./src/app/admin-all-claim-trackers/admin-all-claim-trackers.component.html","webpack:///./src/app/admin-all-claim-trackers/admin-all-claim-trackers.component.ts","webpack:///./src/app/admin-customer-policy-details/admin-customer-policy-details.component.css","webpack:///./src/app/admin-customer-policy-details/admin-customer-policy-details.component.html","webpack:///./src/app/admin-customer-policy-details/admin-customer-policy-details.component.ts","webpack:///./src/app/admin-edit-claim-trackers/admin-edit-claim-trackers.component.css","webpack:///./src/app/admin-edit-claim-trackers/admin-edit-claim-trackers.component.html","webpack:///./src/app/admin-edit-claim-trackers/admin-edit-claim-trackers.component.ts","webpack:///./src/app/admin-manage-policy/admin-manage-policy.component.css","webpack:///./src/app/admin-manage-policy/admin-manage-policy.component.html","webpack:///./src/app/admin-manage-policy/admin-manage-policy.component.ts","webpack:///./src/app/admin-policy-details/admin-policy-details.component.css","webpack:///./src/app/admin-policy-details/admin-policy-details.component.html","webpack:///./src/app/admin-policy-details/admin-policy-details.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/change-password/change-password.component.css","webpack:///./src/app/change-password/change-password.component.html","webpack:///./src/app/change-password/change-password.component.ts","webpack:///./src/app/claim-tracker/claim-tracker.component.css","webpack:///./src/app/claim-tracker/claim-tracker.component.html","webpack:///./src/app/claim-tracker/claim-tracker.component.ts","webpack:///./src/app/contact-us/contact-us.component.css","webpack:///./src/app/contact-us/contact-us.component.html","webpack:///./src/app/contact-us/contact-us.component.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/edit-profile/edit-profile.component.css","webpack:///./src/app/edit-profile/edit-profile.component.html","webpack:///./src/app/edit-profile/edit-profile.component.ts","webpack:///./src/app/forgot-password/forgot-password.component.css","webpack:///./src/app/forgot-password/forgot-password.component.html","webpack:///./src/app/forgot-password/forgot-password.component.ts","webpack:///./src/app/historyof-paid-premium/historyof-paid-premium.component.css","webpack:///./src/app/historyof-paid-premium/historyof-paid-premium.component.html","webpack:///./src/app/historyof-paid-premium/historyof-paid-premium.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/my-profile/my-profile.component.css","webpack:///./src/app/my-profile/my-profile.component.html","webpack:///./src/app/my-profile/my-profile.component.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/pay-premium/pay-premium.component.css","webpack:///./src/app/pay-premium/pay-premium.component.html","webpack:///./src/app/pay-premium/pay-premium.component.ts","webpack:///./src/app/policy-details/policy-details.component.css","webpack:///./src/app/policy-details/policy-details.component.html","webpack:///./src/app/policy-details/policy-details.component.ts","webpack:///./src/app/premium-calulator/premium-calulator.component.css","webpack:///./src/app/premium-calulator/premium-calulator.component.html","webpack:///./src/app/premium-calulator/premium-calulator.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/sign-up/sign-up.component.css","webpack:///./src/app/sign-up/sign-up.component.html","webpack:///./src/app/sign-up/sign-up.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"body {\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n\\nform {\\n  border: 3px solid #f1f1f1;\\n}\\n\\ninput[type=text],\\ninput[type=password] {\\n  width: 285px;\\n  padding: 12px 20px;\\n  margin: 8px 0;\\n  display: inline-block;\\n  border: 1px solid #ccc;\\n  box-sizing: border-box;\\n  border-radius: 5px;\\n}\\n\\nbutton {\\n  background-color: rgb(63, 98, 255);\\n  color: white;\\n  padding: 14px 20px;\\n  margin: 8px 0;\\n  border: none;\\n  cursor: pointer;\\n  border-radius: 5px;\\n  width: 285px;\\n}\\n\\nbutton:hover {\\n  opacity: 0.8;\\n}\\n\\n.cancelbtn {\\n  color: white;\\n  padding: 14px 20px;\\n  margin: 8px 0;\\n  border: none;\\n  cursor: pointer;\\n  border-radius: 5px;\\n  width: 285px;\\n  background-color: #f44336;\\n}\\n\\n.imgcontainer {\\n  text-align: center;\\n  margin: 24px 0 12px 0;\\n}\\n\\nimg.avatar {\\n  width: 40%;\\n  border-radius: 50%;\\n}\\n\\n.container {\\n  padding: 16px;\\n}\\n\\nspan.psw {\\n  float: left;\\n  padding-top: 16px;\\n}\\n\\n/* Change styles for span and cancel button on extra small screens */\\n\\n@media screen and (max-width: 300px) {\\n  span.psw {\\n      display: block;\\n      float: none;\\n  }\\n\\n  .cancelbtn {\\n      width: 300px;\\n  }\\n}\\n\\n.box {\\n  position: absolute;\\n  text-align: center;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n  height: 500px;\\n  width: 400px;\\n  padding: 40px;\\n  padding-top: 25px;\\n  box-sizing: border-box;\\n  box-shadow: 0 15px 25px rgb(23, 25, 26);\\n  border-radius: 10px;\\n  margin-top: 70px;\\n}\\n\\n.copyright\\n{\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: center;\\n  justify-content: center;\\n  color:black;\\n  padding: 1.4em;\\n  text-align: center;\\n}\"","module.exports = \"<h1 style=\\\"text-align: center;\\\"><b>About Online Insurance Management System</b></h1>\\n\\n\\n\\n\\n<div class=\\\"card\\\" style=\\\"width: fit-content;\\\">\\n  <img src=\\\"/src/assets/p1.jpg\\\" class=\\\"card-img-top\\\" alt=\\\"...\\\">\\n  <div class=\\\"card-body\\\">\\n    <p class=\\\"card-text\\\">The Online Policy Management System Project Manages The Activities Related to\\n        Insurance of People And There Information And Data to The Insurance Company. The Insurance\\n        can Be For The Any Company,any Human Being or Any Other Product Such As Vehicle,mobile,etc.</p>\\n    <p class=\\\"card-text\\\">Adding to It This System Contains Policy Details That can Be Accessible By Customer And\\n        Handled By The Administrator. The User can Add New Policy And Paid Premium By Calculating It\\n        on Premium Calculator. And The Admin can View All The Details of The User And Manage It By\\n        Using Admin Dashboard. The User can Track on There Policy By Using Claim Tracker.\\n      <p class=\\\"card-text\\\">Furthermore,the Insurance Holder can View Details of There Policies And Manage There\\n          Profile Whereas Administrator or Insurance Company can Manage or View All Details of\\n          Customers There Policies And can Track There Valuable Customers. Also They can View The\\n          Customer’s Inactive Policies. With This Information They can Reach Out to The Customer.</p>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.css']\n})\nexport class AboutUsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<table class=\\\"table\\\">\\n  <tr>\\n      <th>Policy ID</th>\\n      <th>Policy Name</th>\\n      <th>Policy Decription</th>\\n      <th>Years</th>\\n      <th>Amount</th>\\n      <th>Buy</th>\\n      \\n      \\n  </tr>\\n  <tbody >\\n         \\n         <tr *ngFor=\\\"let policy of AllPolicyData\\\">\\n             \\n          <td>{{policy.policyid}}</td>\\n          <td>{{policy.policyname}}</td>\\n          <td>{{policy.policydescription}}</td>\\n          \\n          <td>{{policy.policyduration}}</td>\\n          \\n          <td>{{policy.totalinsuranceamount}}</td>\\n          \\n             <td><input type=\\\"button\\\" id=\\\"btnBUY\\\" class=\\\"btn btn-info\\\" name=\\\"btnBUY\\\" routerLink=\\\"/PremiumCalculator/{{policy.policyid}}\\\" value=\\\"BUY\\\" policyID=\\\"\\\" ></td>\\n             \\n        </tr>\\n   \\n\\n      </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-policy',\n  templateUrl: './add-policy.component.html',\n  styleUrls: ['./add-policy.component.css']\n})\nexport class AddPolicyComponent implements OnInit {\n\n  AllPolicyData:any;\n  constructor(\n    public DataService: DataService,\n    public router: Router) { \n    \n  }\n\n  ngOnInit() {\n    let StatusOfUserSearched = this.DataService.GetAllPolicyData()\n      StatusOfUserSearched.subscribe((result: any) => {\n        // result.dob= new DatePipe(result.dob);\n          \n          this.AllPolicyData = result;\n          console.log(this.AllPolicyData);\n        \n      });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 style=\\\"text-align:center\\\">Add Claim Tracker</h2>\\n\\n    <form #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"FormValidation(myForm)\\\">\\n        <table style=\\\"align-content: center;margin-left:auto;margin-right:auto;\\\" height=\\\"300px\\\" width=\\\"400px\\\" >\\n            \\n    \\n            <tr>\\n    \\n                <td><b> UserId</b></td>\\n                <td>\\n                    <input ngModel type=\\\"number\\\" placeholder=\\\"Enter UserId\\\" name=\\\"userId\\\" required>\\n                </td>\\n            </tr>\\n    \\n            <tr>\\n    \\n                <td><b>Remarks:</b></td>\\n                <td>\\n                    \\n                    <textarea ngModel name=\\\"remarks\\\" placeholder=\\\"Enter Remark for Claim\\\" id=\\\"remarks\\\" cols=\\\"30\\\" rows=\\\"5\\\"></textarea>\\n                </td>~\\n            </tr>\\n\\n            <tr>\\n    \\n                <td><b>Claim Status:</b></td>\\n                <td>\\n                  <select style=\\\"background-color: aliceblue;\\\" ngModel name=\\\"claimstatus\\\"  placeholder=\\\"Select Claim Status\\\" required id=\\\"claimstatus\\\" class=\\\"form-control\\\">\\n                    <!-- <option value=\\\"\\\" style=\\\"color:black;\\\" disabled selected hidden>Select your option</option>  -->\\n                <option value=\\\"APPROVED\\\" >APPROVED</option>\\n                 <option value=\\\"PROCESSING\\\">PROCESSING</option>\\n                 <option value=\\\"REJECTED\\\">REJECTED</option>\\n               </select>\\n                </td>\\n            </tr>\\n\\n            <tr>\\n                <td colspan=\\\"2\\\" style=\\\"text-align:center\\\">\\n                    <input type=\\\"submit\\\" name=\\\"addpolicytbtn\\\" class=\\\"btn btn-info\\\" value=\\\"Add Claim Tracker\\\">\\n                    <label style=\\\"position: absolute; left: 150px; \\\"><b>{{msg}}</b></label>\\n                           \\n                </td>\\n            </tr>\\n            \\n        </table>\\n\\n\\n    </form>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { DataService } from '../data.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-add-claim-tracker',\n  templateUrl: './admin-add-claim-tracker.component.html',\n  styleUrls: ['./admin-add-claim-tracker.component.css']\n})\nexport class AdminAddClaimTrackerComponent implements OnInit {\n\n  msg: string;\n  constructor(private AuthService:AuthService,private service: DataService, private router:Router) { }\n\n  ngOnInit() {\n  }\n\n  FormValidation(ClaimTrackerData: any) {\n    if ( ClaimTrackerData.form.value.policyname == \"\" ||\n    ClaimTrackerData.form.value.policydescription == \"\" || \n    ClaimTrackerData.form.value.policyduration == \"\") {\n      this.msg = \"All fields are compulsory!!\";\n    }\n    else {\n      \n      let resultstate:any = this.service.AddClaimTrackerById(sessionStorage.userId,ClaimTrackerData.form.value)\n      console.log(ClaimTrackerData.form.value)\n      resultstate.subscribe((data: any) => {\n        // if (data.error == null) {\n          this.msg = \"Successfully Added Up!!\"+data;\n          window.alert(this.msg)\n          this.router.navigate(['/Admin/AllClaimTrackers']);\n        // }\n        // else {\n        //   // console.log(data);\n        //   // this.msg = \"Somthing went Wrong!!\";\n        //   // this.num = 0;\n        // }\n      },(error)=>{\n        console.log(error);\n          this.msg = \"Somthing went Wrong!!\";\n          \n      });\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 style=\\\"text-align:center\\\">Add Policy</h2>\\n\\n    <form #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"FormValidation(myForm)\\\">\\n        <table style=\\\"align-content: center;margin-left:auto;margin-right:auto;\\\" height=\\\"300px\\\" width=\\\"400px\\\" >\\n            \\n    \\n            <tr>\\n    \\n                <td><b> Policy Name:</b></td>\\n                <td>\\n                    <input ngModel type=\\\"text\\\" placeholder=\\\"Enter Policy Name\\\" name=\\\"policyname\\\" required=\\\"required\\\">\\n                </td>\\n            </tr>\\n    \\n            <tr>\\n    \\n                <td><b>Benefits:</b></td>\\n                <td>\\n                    \\n                    <textarea ngModel name=\\\"policydescription\\\" placeholder=\\\"Enter Policy Description\\\" id=\\\"policydescription\\\" cols=\\\"30\\\" rows=\\\"5\\\"></textarea>\\n                </td>\\n            </tr>\\n\\n            <tr>\\n    \\n                <td><b>Years:</b></td>\\n                <td>\\n                    <input ngModel type=\\\"Number\\\" placeholder=\\\"Enter Policy Duration\\\" name=\\\"policyduration\\\" required=\\\"required\\\">\\n                </td>\\n            </tr>\\n\\n            <tr>\\n    \\n                <td><b>Amount for Insurance:</b></td>\\n                <td>\\n                    <input ngModel type=\\\"Number\\\" placeholder=\\\"Total Insurance Amount \\\" name=\\\"totalinsuranceamount\\\" required=\\\"required\\\">\\n                </td>\\n            </tr>\\n    \\n            <tr>\\n                <td colspan=\\\"2\\\" style=\\\"text-align:center\\\">\\n                    <input type=\\\"submit\\\" name=\\\"addpolicytbtn\\\" class=\\\"btn btn-info\\\" value=\\\"Add Policy\\\">\\n                    <label style=\\\"position: absolute; left: 150px; \\\"><b>{{msg}}</b></label>\\n                           \\n                </td>\\n            </tr>\\n            \\n        </table>\\n\\n\\n    </form>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-admin-add-policy',\n  templateUrl: './admin-add-policy.component.html',\n  styleUrls: ['./admin-add-policy.component.css']\n})\nexport class AdminAddPolicyComponent implements OnInit {\n\n  msg: string;\n  num: number;\n\n  constructor(private AuthService:AuthService,private service: DataService, private router:Router) { \n    if(sessionStorage.roleID!=0)\n    {\n      delete sessionStorage[\"email\"];\n    delete sessionStorage[\"userid\"];\n    delete sessionStorage[\"roleID\"];\n    delete sessionStorage[\"userdata\"];\n    delete sessionStorage[\"isLoggedIn\"];\n    this.router.navigate(['Login']);\n     \n\n    }\n  }\n\n  ngOnInit() {\n   \n  }\n\n  FormValidation(PolicyData: any) {\n    if ( PolicyData.form.value.policyname == \"\" ||\n    PolicyData.form.value.policydescription == \"\" || \n    PolicyData.form.value.policyduration == \"\"|| \n    PolicyData.form.value.totalinsuranceamount == \"\") {\n      this.msg = \"All fields are compulsory!!\";\n    }\n    else {\n      \n      let resultstate:any = this.service.AddPolicyData(PolicyData.form.value)\n      console.log(PolicyData.form.value)\n      resultstate.subscribe((data: any) => {\n        // if (data.error == null) {\n          this.msg = \"Successfully Added Up!!\";\n          window.alert(this.msg)\n          this.router.navigate(['Admin']);\n        // }\n        // else {\n        //   // console.log(data);\n        //   // this.msg = \"Somthing went Wrong!!\";\n        //   // this.num = 0;\n        // }\n      },(error)=>{\n        console.log(error);\n          this.msg = \"Somthing went Wrong!!\";\n          \n      });\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n\\n<body>\\n  <h1 style=\\\"text-align: center;\\\">Online Insurance Management System</h1>\\n\\n  \\n<marquee>New updates:Insurance Policy</marquee>       \\n<button type=\\\"button\\\" routerLink=\\\"/Admin/AddClaimTracker\\\" class=\\\"btn btn-info\\\">Add New Tracker</button><br>\\n<table class=\\\"table\\\">\\n<tr>\\n<th>Claim Tracker ID</th>\\n<th>Claim Status</th>\\n<th>Claim Remarks</th>\\n<th></th>\\n\\n</tr>\\n   \\n   <tr *ngFor=\\\"let ClaimTracker of AllClaimTrackers\\\"  routerLink=\\\"/Admin/EditClaimTracker/{{this.ClaimTracker.ctid}}\\\">\\n       \\n       <td>{{this.ClaimTracker.ctid}}</td>\\n       <td>{{this.ClaimTracker.claimstatus}}</td>\\n       <td>{{this.ClaimTracker.remarks}}</td>\\n       \\n       <td><input type=\\\"button\\\" class=\\\"btn btn-info\\\" routerLink=\\\"/Admin/EditClaimTracker/{{this.ClaimTracker.ctid}}\\\" value=\\\"Update Claim Details\\\" /></td>\\n       \\n      \\n  </tr>\\n\\n\\n\\n</table>\\n\\n\\n  \\n\\n</body>\\n\\n</html>\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-admin-all-claim-trackers',\n  templateUrl: './admin-all-claim-trackers.component.html',\n  styleUrls: ['./admin-all-claim-trackers.component.css']\n})\nexport class AdminAllClaimTrackersComponent implements OnInit {\n\n  AllClaimTrackers:any\n  constructor(private DataService:DataService) { }\n\n  ngOnInit() {\n    let StatusOfPremiumSearch = this.DataService.GetAllClaimTrackers()\n      StatusOfPremiumSearch.subscribe((result:any)=>{\n        \n         console.log(result);\n        //  let id =element.cpid;\n        //  this.PremiumScheduleData.push(result);\n        // element.premiumschedule=result\n        this.AllClaimTrackers=result\n        console.log(this.AllClaimTrackers)\n        \n      },(error)=>{\n        console.log(error)\n  });\n\n  }\n}","module.exports = \"\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n\\n<body>\\n  <h1 style=\\\"text-align: center;\\\">Admin - Online Insurance Management System</h1>\\n\\n  \\n  \\n<button type=\\\"button\\\" routerLink=\\\"/Admin/AddPolicy\\\" class=\\\"btn btn-info\\\">Add New Policy</button><br>\\n<table class=\\\"table\\\">\\n<tr>\\n<th>Customer Policy ID</th>\\n<!-- <th>Customer Name</th> -->\\n<th>Policy ID</th>\\n<th>Policy Name</th>\\n<th>Years</th>\\n<th>Buy Date</th>\\n<th>Premium Amount</th>\\n<th>Paid Premium Count</th>\\n<th>Total Premium Count </th>\\n<th></th>\\n\\n</tr>\\n   \\n   <tr routerLink=\\\"/Admin/ManagePolicy/1\\\" *ngFor=\\\"let cpdetails of AllCustPolicyData\\\" >\\n    <td>{{cpdetails.cpid}}</td>\\n    <!-- <td>Customer Name</td> -->\\n       <td>{{cpdetails.policyid.policyid}}</td>\\n       <td>{{cpdetails.policyid.policyname}}</td>\\n       \\n       <td>{{cpdetails.policyid.policyduration}}</td>\\n\\n       <td>{{cpdetails.buydate |  date:'yyyy-MM-dd'}}</td>\\n       <td>{{cpdetails.premiumamout}}</td>\\n       <td>{{cpdetails.paidpremiumcount}}</td>\\n       <td>{{cpdetails.totalpremiumcount}}</td>\\n       \\n       \\n  </tr>\\n\\n\\n\\n</table>\\n\\n\\n  <div class=\\\"jumbotron text-center\\\" style=\\\"margin-bottom:0\\\">\\n    <p>Footer</p>\\n  </div>\\n\\n</body>\\n\\n</html>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-admin-customer-policy-details',\n  templateUrl: './admin-customer-policy-details.component.html',\n  styleUrls: ['./admin-customer-policy-details.component.css']\n})\nexport class AdminCustomerPolicyDetailsComponent implements OnInit {\n\n  AllCustPolicyData:any\n  msg:string\n  constructor(private DataService:DataService,private AuthService:AuthService, private router:Router) { \n    if(sessionStorage.roleID!=0)\n    {\n      delete sessionStorage[\"email\"];\n    delete sessionStorage[\"userid\"];\n    delete sessionStorage[\"roleID\"];\n    delete sessionStorage[\"userdata\"];\n    delete sessionStorage[\"isLoggedIn\"];\n    this.router.navigate(['Login']);\n     \n\n    }\n  }\n\n  ngOnInit() {\n\n    let resultstate:any = this.DataService.GetAllUsersPolicyData()\n      // console.log(PolicyData.form.value)\n      resultstate.subscribe((data: any) => {\n        // if (data.error == null) {\n          // this.msg = \"Successfully Added Up!!\";\n          console.log(data)\n         this.AllCustPolicyData=data\n        // }\n        // else {\n        //   // console.log(data);\n        //   // this.msg = \"Somthing went Wrong!!\";\n        //   // this.num = 0;\n        // }\n      },(error)=>{\n        console.log(error);\n          // this.msg = \"Somthing went Wrong!!\";\n          \n      });\n    \n  }\n}\n","module.exports = \"\"","module.exports = \"<h2 style=\\\"text-align:center\\\">Update Claim Tracker</h2>\\n\\n    <form >\\n        <table style=\\\"align-content: center;margin-left:auto;margin-right:auto;\\\" height=\\\"300px\\\" width=\\\"400px\\\" >\\n            \\n    \\n            \\n    \\n            <tr>\\n    \\n                <td><b>Remarks:</b></td>\\n                <td>\\n                    \\n                    <textarea [(ngModel)]=\\\"ClaimTrackerData.remarks\\\" name=\\\"remarks\\\" placeholder=\\\"Enter Remark for Claim\\\" id=\\\"remarks\\\" cols=\\\"30\\\" rows=\\\"5\\\"></textarea>\\n                </td>~\\n            </tr>\\n\\n            <tr>\\n    \\n                <td><b>Claim Status:</b></td>\\n                <td>\\n                  <select style=\\\"background-color: aliceblue;\\\" [(ngModel)]=\\\"ClaimTrackerData.claimstatus\\\" name=\\\"claimstatus\\\"  placeholder=\\\"Select Claim Status\\\" required id=\\\"claimstatus\\\" class=\\\"form-control\\\">\\n                    <!-- <option value=\\\"\\\" style=\\\"color:black;\\\" disabled selected hidden>Select your option</option>  -->\\n                <option value=\\\"APPROVED\\\" >APPROVED</option>\\n                 <option value=\\\"PROCESSING\\\">PROCESSING</option>\\n                 <option value=\\\"REJECTED\\\">REJECTED</option>\\n               </select>\\n                </td>\\n            </tr>\\n\\n            <tr>\\n                <td colspan=\\\"2\\\" style=\\\"text-align:center\\\">\\n                    <input type=\\\"button\\\" (click)=\\\"UpdateClaimTracker()\\\" name=\\\"addpolicytbtn\\\" class=\\\"btn btn-info\\\" value=\\\"Update Claim Tracker\\\">\\n                    <label style=\\\"position: absolute; left: 150px; \\\"><b>{{msg}}</b></label>\\n                           \\n                </td>\\n            </tr>\\n            \\n        </table>\\n\\n\\n    </form>\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-edit-claim-trackers',\n  templateUrl: './admin-edit-claim-trackers.component.html',\n  styleUrls: ['./admin-edit-claim-trackers.component.css']\n})\nexport class AdminEditClaimTrackersComponent implements OnInit {\n\n  ClaimTrackerData:any\n  ClaimTrackerId:number\n  msg:string\n  constructor(private DataService:DataService,private router:Router,private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      this.ClaimTrackerId = params['claimtrackerid'];\n     console.log(this.ClaimTrackerId);\n  });\n\n  let statusofresult= this.DataService.GetClaimTrackerByCTId(this.ClaimTrackerId)\n   \n  statusofresult.subscribe((result)=>{\n    console.log(result);\n    if(result!=null)\n    {\n\n      this.ClaimTrackerData=result\n    }\n    \n\n  },(error)=>{\n    console.log(error);\n  })\n\n\n\n}\n\n\nUpdateClaimTracker()\n{\n  \n  if(this.ClaimTrackerData==null || this.ClaimTrackerData==undefined)\n  {\n    this.msg=\"All fields are required\"\n\n  }\n  else\n  {\n    this.msg=\"\"\n    let statusofresult= this.DataService.UpdateClaimTrackerById(this.ClaimTrackerId,this.ClaimTrackerData)\n   \n  statusofresult.subscribe((result)=>{\n    console.log(result);\n    window.alert(\"Updated Successfully\")\n    this.router.navigate([\"/Admin/AllClaimTrackers\"])\n\n  },(error)=>{\n    console.log(error);\n  })\n\n  }\n}\n\n}\n","module.exports = \"\"","module.exports = \"<h2 style=\\\"text-align:center\\\">Manage Policy</h2>\\n\\n<table style=\\\"align-content: center;margin-left:auto;margin-right:auto;\\\" height=\\\"300px\\\" width=\\\"400px\\\">\\n\\n\\n    <tr>\\n\\n        <td><b> Policy Name:</b></td>\\n        <td>\\n            <input type=\\\"text\\\" name=\\\"policyname\\\" [(ngModel)]=\\\"PolicyData.policyname\\\" required=\\\"required\\\">\\n        </td>\\n    </tr>\\n\\n    <tr>\\n\\n        <td><b>Benefits:</b></td>\\n        <td>\\n\\n            <input type=\\\"text\\\" name=\\\"policydescription\\\" [(ngModel)]=\\\"PolicyData.policydescription\\\" id=\\\"policydescription\\\" class=\\\"form-control\\\" rows=\\\"3\\\"\\n                required=\\\"required\\\">\\n\\n            <!-- <input type=\\\"text\\\" disabled value=\\\"{{this.PolicyData.policydescription}}\\\" name=\\\"policydescription\\\" required=\\\"required\\\"> -->\\n        </td>\\n    </tr>\\n\\n    <tr>\\n\\n        <td><b>Years:</b></td>\\n        <td>\\n            <input type=\\\"Number\\\" [(ngModel)]=\\\"PolicyData.policyduration\\\" disabled name=\\\"policyduration\\\" required=\\\"required\\\">\\n        </td>\\n    </tr>\\n\\n    <tr>\\n\\n        <td><b>Amount for Insurance:</b></td>\\n        <td>\\n            <input type=\\\"Number\\\" [(ngModel)]=\\\"PolicyData.totalinsuranceamount\\\" disabled name=\\\"totalinsuranceamount\\\"\\n                required=\\\"required\\\">\\n        </td>\\n    </tr>\\n    <tr>\\n            <td><input type=\\\"button\\\" (click)=\\\"UpdatePolicy()\\\" name=\\\"bckbtn\\\" class=\\\"btn btn-success\\\" value=\\\"UpdatePolicy\\\"></td>\\n        <td><input type=\\\"button\\\" routerLink=\\\"/Home\\\" name=\\\"bckbtn\\\" class=\\\"btn btn-info\\\" value=\\\"Back\\\"></td>\\n    </tr>\\n\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-admin-manage-policy',\n  templateUrl: './admin-manage-policy.component.html',\n  styleUrls: ['./admin-manage-policy.component.css']\n})\nexport class AdminManagePolicyComponent implements OnInit {\n\n  PolicyData:any\n  policyID:number\n  constructor(private DataService:DataService,private router:Router,private activatedRoute: ActivatedRoute) {\n    if(sessionStorage.roleID!=0)\n    {\n      delete sessionStorage[\"email\"];\n    delete sessionStorage[\"userid\"];\n    delete sessionStorage[\"roleID\"];\n    delete sessionStorage[\"userdata\"];\n    delete sessionStorage[\"isLoggedIn\"];\n    this.router.navigate(['Login']);\n     \n\n    }\n   }\n\n  ngOnInit() {\n\n    this.activatedRoute.params.subscribe(params => {\n      this.policyID = params['policyid'];\n     console.log(this.policyID);\n   });\n    let statusofresult= this.DataService.GetAllPolicyDataById(this.policyID)\n   \n    statusofresult.subscribe((result)=>{\n      console.log(result);\n      this.PolicyData=result\n\n    },(error)=>{\n      console.log(error);\n    })\n\n\n\n  }\n\n  UpdatePolicy()\n  {\n    let statusofresult= this.DataService.UpdatePolicy(this.PolicyData)\n   console.log(this.PolicyData)\n    statusofresult.subscribe((result)=>{\n      console.log(result);\n      this.PolicyData=result\n      this.router.navigate([\"/Admin\"])\n\n    },(error)=>{\n      console.log(error);\n    })\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n\\n<body>\\n  <h1 style=\\\"text-align: center;\\\">Admin - Online Insurance Management System</h1>\\n\\n  \\n  \\n<button type=\\\"button\\\" routerLink=\\\"/Admin/AddPolicy\\\" class=\\\"btn btn-info\\\">Add New Policy</button>\\n<button type=\\\"button\\\" routerLink=\\\"/Admin/AddClaimTracker\\\" class=\\\"btn btn-info\\\">Add Claim Tracker</button>\\n<button type=\\\"button\\\" routerLink=\\\"/Admin/AllClaimTrackers\\\" class=\\\"btn btn-info\\\">All Claim Trackers</button>\\n<button type=\\\"button\\\" routerLink=\\\"/Admin/CustomerPolicyDetails\\\" class=\\\"btn btn-info\\\">CustomerPolicyDetails</button>\\n<table class=\\\"table\\\">\\n<tr>\\n\\n<th>Policy ID</th>\\n<th>Policy Name</th>\\n<th>Policy Description</th>\\n<th>Years</th>\\n<th>Total Insurance Amount</th>\\n\\n<th></th>\\n\\n</tr>\\n   \\n   <tr routerLink=\\\"/Admin/ManagePolicy/1\\\" *ngFor=\\\"let policy of AllPolicyData\\\" >\\n       <td>{{policy.policyid}}</td>\\n       <td>{{policy.policyname}}</td>\\n       <td>{{policy.policydescription}}</td>\\n       <td>{{policy.policyduration}}</td>\\n       <td>{{policy.totalinsuranceamount}}</td>\\n\\n       \\n       \\n       \\n  </tr>\\n\\n\\n\\n</table>\\n\\n\\n  <div class=\\\"jumbotron text-center\\\" style=\\\"margin-bottom:0\\\">\\n    <p>Footer</p>\\n  </div>\\n\\n</body>\\n\\n</html>\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-policy-details',\n  templateUrl: './admin-policy-details.component.html',\n  styleUrls: ['./admin-policy-details.component.css']\n})\nexport class AdminPolicyDetailsComponent implements OnInit {\n\n  AllPolicyData:any\n  msg:string\n  constructor(private DataService:DataService,private AuthService:AuthService, private router:Router) { \n    if(sessionStorage.roleID!=0)\n    {\n      delete sessionStorage[\"email\"];\n    delete sessionStorage[\"userid\"];\n    delete sessionStorage[\"roleID\"];\n    delete sessionStorage[\"userdata\"];\n    delete sessionStorage[\"isLoggedIn\"];\n    this.router.navigate(['Login']);\n     \n\n    }\n  }\n\n  ngOnInit() {\n\n    let resultstate:any = this.DataService.GetAllPolicyData()\n      // console.log(PolicyData.form.value)\n      resultstate.subscribe((data: any) => {\n        // if (data.error == null) {\n          // this.msg = \"Successfully Added Up!!\";\n          console.log(data)\n         this.AllPolicyData=data\n        // }\n        // else {\n        //   // console.log(data);\n        //   // this.msg = \"Somthing went Wrong!!\";\n        //   // this.num = 0;\n        // }\n      },(error)=>{\n        console.log(error);\n          // this.msg = \"Somthing went Wrong!!\";\n          \n      });\n    \n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".footer-basic-centered {\\n    background-color: rgb(155, 161, 161);\\n    /* #292c2f */\\n    color: rgb(156, 240, 131);\\n    box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.12);\\n    box-sizing: border-box;\\n    width: 100%;\\n    text-align: center;\\n    font: normal 18px sans-serif;\\n    padding: 37px;\\n    margin-top: 80px;\\n}\\n\\nfooter {\\n    position: absolute;\\n    position: bottom;\\n    display: block;\\n}\\n\\n.ftlogo{\\n    color: azure;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\" *ngIf=\\\"!service.isAdmin()\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/Home\\\">OPMS</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\n    aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse navbar-ex1-collapse\\\" *ngIf=\\\"!service.isAdmin()\\\">\\n    <ul class=\\\"nav navbar-nav\\\">\\n      <li class=\\\"active\\\">\\n        <a routerLink=\\\"/Home\\\">Home</a>\\n      </li>\\n      <li class=\\\"active\\\">\\n        <a routerLink=\\\"/AboutUs\\\">About Us</a>\\n      </li>\\n      <li class=\\\"active\\\">\\n        <a routerLink=\\\"/ContactUs\\\">Contact Us</a>\\n      </li>\\n    </ul>\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n      <li class=\\\"active\\\" *ngIf=\\\"!service.isLoggedIn()\\\">\\n        <a routerLink=\\\"/Login\\\">Login</a>\\n      </li>\\n      <li class=\\\"active\\\" *ngIf=\\\"service.isLoggedIn()\\\">\\n        <a routerLink=\\\"/Profile\\\">Profile</a>\\n      </li>\\n      <li class=\\\"active\\\" *ngIf=\\\"service.isLoggedIn()\\\">\\n        <a href=\\\"#\\\" (click)=\\\"Logout()\\\">Logout</a>\\n      </li>\\n      <li class=\\\"active\\\" *ngIf=\\\"!service.isLoggedIn()\\\">\\n        <a routerLink=\\\"/SignUp\\\">SignUp</a>\\n      </li>\\n      <li class=\\\"dropdown\\\">\\n        <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">Menu <b class=\\\"caret\\\"></b></a>\\n        <ul class=\\\"dropdown-menu\\\">\\n          <li><a routerLink=\\\"Home\\\" *ngIf=\\\"service.isLoggedIn()\\\">DashBoard</a></li>\\n          <li><a routerLink=\\\"Profile\\\" *ngIf=\\\"service.isLoggedIn()\\\">My Profile</a></li>\\n          <li><a routerLink=\\\"HistoryofPaidPremium\\\" *ngIf=\\\"service.isLoggedIn()\\\">History of Paid Premium</a></li>\\n          <li><a routerLink=\\\"ChangePassword\\\" *ngIf=\\\"service.isLoggedIn()\\\">Change Password</a></li>\\n          <li><a routerLink=\\\"ClaimTracker\\\" *ngIf=\\\"service.isLoggedIn()\\\">Claim Tracker</a></li>\\n          <li><a (click)=\\\"Logout()\\\" *ngIf=\\\"service.isLoggedIn()\\\">Logout</a></li>\\n          <li><a routerLink=\\\"Login\\\" *ngIf=\\\"!service.isLoggedIn()\\\">Login</a></li>\\n        </ul>\\n      </li>\\n    </ul>\\n  </div>\\n\\n</nav>\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\" *ngIf=\\\"service.isAdmin()\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/Home\\\">OPMS</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\n    aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse navbar-ex1-collapse\\\" *ngIf=\\\"service.isAdmin()\\\">\\n    <ul class=\\\"nav navbar-nav\\\">\\n      <li class=\\\"active\\\">\\n        <a routerLink=\\\"/Admin\\\">Home</a>\\n      </li>\\n      <li class=\\\"active\\\">\\n        <a routerLink=\\\"/AboutUs\\\">About Us</a>\\n      </li>\\n      <li class=\\\"active\\\">\\n        <a routerLink=\\\"/ContactUs\\\">Contact Us</a>\\n      </li>\\n    </ul>\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n      <li class=\\\"active\\\" *ngIf=\\\"!service.isLoggedIn()\\\">\\n        <a routerLink=\\\"/Login\\\">Login</a>\\n      </li>\\n      <li class=\\\"active\\\" *ngIf=\\\"service.isLoggedIn()\\\">\\n        <a href=\\\"#\\\" (click)=\\\"Logout()\\\">Logout</a>\\n      </li>\\n      <li class=\\\"dropdown\\\">\\n        <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">Menu <b class=\\\"caret\\\"></b></a>\\n        <ul class=\\\"dropdown-menu\\\">\\n          <li><a routerLink=\\\"/Admin/CustomerPolicyDetails\\\" *ngIf=\\\"service.isLoggedIn()\\\">DashBoard</a></li>\\n          <li><a routerLink=\\\"/Admin/AddPolicy\\\" *ngIf=\\\"service.isLoggedIn()\\\">Add Policy</a></li>\\n          <li><a routerLink=\\\"/Admin/AddClaimTracker\\\" *ngIf=\\\"service.isLoggedIn()\\\">Add Claim Tracker</a></li>\\n          <li><a routerLink=\\\"/Admin/AllClaimTrackers\\\" *ngIf=\\\"service.isLoggedIn()\\\">All Claim Tracker</a></li>\\n          <li><a routerLink=\\\"/ChangePassword\\\" *ngIf=\\\"service.isLoggedIn()\\\">Change Password</a></li>\\n          <li><a (click)=\\\"Logout()\\\" *ngIf=\\\"service.isLoggedIn()\\\">Logout</a></li>\\n          <li><a routerLink=\\\"Login\\\" *ngIf=\\\"!service.isLoggedIn()\\\">Login</a></li>\\n        </ul>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\\n<footer class=\\\"footer-basic-centered\\\">\\n  <p class=\\\"footer-company-motto\\\"><b id=\\\"motto\\\">Online Policy Management System</b></p>\\n  <p class=\\\"footer-links\\\">\\n\\n    <a class=\\\"ftlogo\\\" href=\\\"/\\\" id=\\\"links\\\"> Home Page |</a>\\n    <a class=\\\"ftlogo\\\" routerLink=\\\"/ContactUs\\\" id=\\\"links\\\"> Contact Us |</a>\\n    <a class=\\\"ftlogo\\\" routerLink=\\\"/AboutUs\\\" id=\\\"links\\\"> About Us |</a>\\n    <a class=\\\"ftlogo\\\" routerLink=\\\"/\\\" id=\\\"links\\\"> Visit OPMS</a> |\\n    <a (click)=\\\"Logout()\\\" *ngIf=\\\"service.isLoggedIn()\\\">Logout</a>\\n    <a routerLink=\\\"Login\\\" *ngIf=\\\"!service.isLoggedIn()\\\">Login</a>\\n  </p>\\n  <p class=\\\"footer-company-name\\\">© 2020 OPMS India. All rights reserved.</p>\\n  <div class=\\\"align-middle text-center\\\" id=\\\"links\\\">\\n    <h3 class=\\\"text-white typography-5 mb-10\\\">Follow Us</h3>\\n    <a class=\\\"ftlogo\\\" href=\\\"https://www.facebook.com/\\\"> <img width=\\\"24\\\" height=\\\"24\\\" alt=\\\"Like us on Facebook\\\"\\n        src=\\\"http://cache1.artprintimages.com/images/jump_pages/rebrand/footer/fb.png\\\"> Facebook |</a>\\n    <a class=\\\"ftlogo\\\" href=\\\"https://twitter.com/\\\"> <img width=\\\"67\\\" alt=\\\"Follow us on Twitter\\\"\\n        src=\\\"http://cache1.artprintimages.com/images/jump_pages/rebrand/footer/twitter.png\\\"> Twitter |</a>\\n    <a class=\\\"ftlogo\\\" href=\\\"https://www.instagram.com/\\\"><img width=\\\"24\\\" height=\\\"24\\\" alt=\\\"Follow us on Instagram\\\"\\n        src=\\\"http://cache1.artprintimages.com/images/jump_pages/rebrand/footer/instagram-badge.png\\\"> Instagram </a>\\n  </div>\\n\\n\\n\\n</footer>\\n\\n\\n\\n<!-- ============================================================================================================== -->\\n<!-- <div class=\\\"container-fluid\\\"> -->\\n<!-- <nav class=\\\"navbar navbar-default\\\" role=\\\"navigation\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-ex1-collapse\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/Home\\\">Online Policy Management System</a>\\n    </div>\\n\\n    <div class=\\\"collapse navbar-collapse navbar-ex1-collapse\\\" *ngIf=\\\"!service.isAdmin()\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li class=\\\"active\\\">\\n          <a routerLink=\\\"/Home\\\">Home</a>\\n        </li>\\n        <li class=\\\"active\\\">\\n          <a routerLink=\\\"/AboutUs\\\">About Us</a>\\n        </li>\\n        <li class=\\\"active\\\">\\n          <a routerLink=\\\"/ContactUs\\\">Contact Us</a>\\n        </li>\\n      </ul>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li class=\\\"active\\\" *ngIf=\\\"!service.isLoggedIn()\\\">\\n          <a routerLink=\\\"/Login\\\">Login</a>\\n        </li>\\n        <li class=\\\"active\\\" *ngIf=\\\"service.isLoggedIn()\\\">\\n          <a routerLink=\\\"/Profile\\\">Profile</a>\\n        </li>\\n        <li class=\\\"active\\\" *ngIf=\\\"service.isLoggedIn()\\\">\\n          <a href=\\\"#\\\" (click)=\\\"Logout()\\\">Logout</a>\\n        </li>\\n        <li class=\\\"active\\\" *ngIf=\\\"!service.isLoggedIn()\\\">\\n          <a routerLink=\\\"/SignUp\\\">SignUp</a>\\n        </li>\\n        <li class=\\\"dropdown\\\">\\n          <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">Menu <b class=\\\"caret\\\"></b></a>\\n          <ul class=\\\"dropdown-menu\\\">\\n            <li><a routerLink=\\\"Home\\\" *ngIf=\\\"service.isLoggedIn()\\\">DashBoard</a></li>\\n            <li><a routerLink=\\\"Profile\\\" *ngIf=\\\"service.isLoggedIn()\\\">My Profile</a></li>\\n            <li><a routerLink=\\\"HistoryofPaidPremium\\\" *ngIf=\\\"service.isLoggedIn()\\\">History of Paid Premium</a></li>\\n            <li><a routerLink=\\\"ChangePassword\\\" *ngIf=\\\"service.isLoggedIn()\\\">Change Password</a></li>\\n            <li><a routerLink=\\\"ClaimTracker\\\" *ngIf=\\\"service.isLoggedIn()\\\">Claim Tracker</a></li>\\n            <li><a (click)=\\\"Logout()\\\" *ngIf=\\\"service.isLoggedIn()\\\">Logout</a></li>\\n            <li><a routerLink=\\\"Login\\\" *ngIf=\\\"!service.isLoggedIn()\\\">Login</a></li>\\n          </ul>\\n        </li>\\n      </ul>\\n    </div>\\n\\n    <div class=\\\"collapse navbar-collapse navbar-ex1-collapse\\\" *ngIf=\\\"service.isAdmin()\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li class=\\\"active\\\">\\n          <a routerLink=\\\"/Admin\\\">Home</a>\\n        </li>\\n        <li class=\\\"active\\\">\\n          <a routerLink=\\\"/AboutUs\\\">About Us</a>\\n        </li>\\n        <li class=\\\"active\\\">\\n          <a routerLink=\\\"/ContactUs\\\">Contact Us</a>\\n        </li>\\n      </ul>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li class=\\\"active\\\" *ngIf=\\\"!service.isLoggedIn()\\\">\\n          <a routerLink=\\\"/Login\\\">Login</a>\\n        </li>\\n        <li class=\\\"active\\\" *ngIf=\\\"service.isLoggedIn()\\\">\\n          <a href=\\\"#\\\" (click)=\\\"Logout()\\\">Logout</a>\\n        </li>\\n        <li class=\\\"dropdown\\\">\\n          <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">Menu <b class=\\\"caret\\\"></b></a>\\n          <ul class=\\\"dropdown-menu\\\">\\n            <li><a routerLink=\\\"/Admin/CustomerPolicyDetails\\\" *ngIf=\\\"service.isLoggedIn()\\\">DashBoard</a></li>\\n            <li><a routerLink=\\\"/Admin/AddPolicy\\\" *ngIf=\\\"service.isLoggedIn()\\\">Add Policy</a></li>\\n            <li><a routerLink=\\\"/Admin/AddClaimTracker\\\" *ngIf=\\\"service.isLoggedIn()\\\">Add Claim Tracker</a></li>\\n            <li><a routerLink=\\\"/Admin/AllClaimTrackers\\\" *ngIf=\\\"service.isLoggedIn()\\\">All Claim Tracker</a></li>\\n            <li><a routerLink=\\\"/ChangePassword\\\" *ngIf=\\\"service.isLoggedIn()\\\">Change Password</a></li>\\n            <li><a (click)=\\\"Logout()\\\" *ngIf=\\\"service.isLoggedIn()\\\">Logout</a></li>\\n            <li><a routerLink=\\\"Login\\\" *ngIf=\\\"!service.isLoggedIn()\\\">Login</a></li>\\n          </ul>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav> -->\"","import { Component } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor( public service: AuthService, private router:Router) { }\n\n  ngOnInit() {\n    \n  }\n\n  \n\n  Logout()\n  {\n    this.service.Logout();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { HomeComponent } from './home/home.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { AboutUsComponent } from './about-us/about-us.component';\nimport { ContactUsComponent } from './contact-us/contact-us.component';\n\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { DataService } from './data.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ProfileComponent } from './profile/profile.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { AddPolicyComponent } from './add-policy/add-policy.component';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { PremiumCalulatorComponent } from './premium-calulator/premium-calulator.component';\nimport { PayPremiumComponent } from './pay-premium/pay-premium.component';\nimport { AdminAddPolicyComponent } from './admin-add-policy/admin-add-policy.component';\nimport { AdminManagePolicyComponent } from './admin-manage-policy/admin-manage-policy.component';\nimport { PolicyDetailsComponent } from './policy-details/policy-details.component';\nimport { HistoryofPaidPremiumComponent } from './historyof-paid-premium/historyof-paid-premium.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { AdminCustomerPolicyDetailsComponent } from './admin-customer-policy-details/admin-customer-policy-details.component';\nimport { AdminService } from './admin.service';\nimport { AdminPolicyDetailsComponent } from './admin-policy-details/admin-policy-details.component';\nimport { ClaimTrackerComponent } from './claim-tracker/claim-tracker.component';\nimport { AdminAddClaimTrackerComponent } from './admin-add-claim-tracker/admin-add-claim-tracker.component';\nimport { AdminAllClaimTrackersComponent } from './admin-all-claim-trackers/admin-all-claim-trackers.component';\nimport { AdminEditClaimTrackersComponent } from './admin-edit-claim-trackers/admin-edit-claim-trackers.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignUpComponent,\n    HomeComponent,\n    NotFoundComponent,\n    AboutUsComponent,\n    ContactUsComponent,\n    ProfileComponent,\n    EditProfileComponent,\n    AddPolicyComponent,\n    MyProfileComponent,\n    ChangePasswordComponent,\n    PremiumCalulatorComponent,\n    PayPremiumComponent,\n    AdminAddPolicyComponent,\n    AdminManagePolicyComponent,\n    PolicyDetailsComponent,\n    HistoryofPaidPremiumComponent,\n    ForgotPasswordComponent,\n    AdminCustomerPolicyDetailsComponent,\n    AdminPolicyDetailsComponent,\n    ClaimTrackerComponent,\n    AdminAddClaimTrackerComponent,\n    AdminAllClaimTrackersComponent,\n    AdminEditClaimTrackersComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    RouterModule.forRoot([\n      {path : \"\" , component : HomeComponent, canActivate: [AuthService]},\n      {path : \"Home\" , component : HomeComponent, canActivate: [AuthService]},\n      {path : \"AboutUs\" , component : AboutUsComponent},\n      {path : \"AddPolicy\" , component : AddPolicyComponent, canActivate: [AuthService]},\n      {path : \"MyProfile\" , component : MyProfileComponent, canActivate: [AuthService]},\n      {path : \"Admin/AddPolicy\" , component : AdminAddPolicyComponent, canActivate: [AuthService]},\n      {path : \"Admin/AddClaimTracker\" , component : AdminAddClaimTrackerComponent, canActivate: [AuthService]},\n      {path : \"Admin/EditClaimTracker/:claimtrackerid\" , component : AdminEditClaimTrackersComponent, canActivate: [AuthService]},\n      {path : \"Admin/AllClaimTrackers\" , component : AdminAllClaimTrackersComponent, canActivate: [AuthService]},\n      {path : \"Admin/ManagePolicy/:policyid\" , component : AdminManagePolicyComponent, canActivate: [AuthService]},\n      {path : \"Admin/CustomerPolicyDetails\" , component : AdminCustomerPolicyDetailsComponent, canActivate: [AuthService]},\n      {path : \"Admin\" , component : AdminPolicyDetailsComponent, canActivate: [AuthService]},\n      {path : \"ChangePassword\" , component : ChangePasswordComponent, canActivate: [AuthService]},\n      {path : \"ClaimTracker\" , component : ClaimTrackerComponent, canActivate: [AuthService]},\n      {path : \"PremiumCalculator/:policyId\" , component : PremiumCalulatorComponent, canActivate: [AuthService]},\n      {path : \"PayPremium/:premiumscheduleid\" , component : PayPremiumComponent, canActivate: [AuthService]},\n      {path : \"HistoryofPaidPremium\" , component : HistoryofPaidPremiumComponent, canActivate: [AuthService]},\n      {path : \"Profile\" , component : ProfileComponent },\n      {path : \"EditProfile\" , component : EditProfileComponent, canActivate: [AuthService]},\n      {path : \"PolicyDetails/:policyid\" , component : PolicyDetailsComponent, canActivate: [AuthService]},\n      {path : \"ContactUs\" , component : ContactUsComponent},\n      {path : \"Login\" , component : LoginComponent},\n      {path : \"ForgotPassword\" , component : ForgotPasswordComponent},\n      {path : \"SignUp\" , component : SignUpComponent},\n      {path : \"**\" , component : LoginComponent}\n    ]),\n    AppRoutingModule\n  ],\n  providers: [HttpClientModule, DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { MD5, enc } from \"crypto-js\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService implements CanActivate {\n  UserData: any\n  constructor(public router: Router) { }\n\n  isLoggedIn()\n  {\n    return (sessionStorage.getItem(\"isLoggedIn\") == \"1\");\n  }\n\n  isAdmin()\n  {\n    if(sessionStorage.getItem(\"roleID\")=='0')\n    {\n      return true\n    }\n    else{\n      return false\n    }\n  }\n\n  canActivate(route: ActivatedRouteSnapshot,\n              state: RouterStateSnapshot)\n  {\n    if(this.isLoggedIn())\n    {\n      \n      return true;\n    }\n    else\n    {\n      this.router.navigate(['Login']);\n      return false;\n    }\n  }\n  Login( result_data:  any)\n  {\n    \n    // console.log(credentials);\n    // console.log(result_data);\n    // const crypto_pwd = MD5(credentials.passwd);\n    // console.log(crypto_pwd);\n    // console.log(result_data.passwd);\n    // if (credentials.email == result_data.email &&\n    //     crypto_pwd   == result_data.passwd)\n    // {\n\n    \n      sessionStorage.setItem(\"isLoggedIn\", \"1\");\n      sessionStorage.setItem(\"email\", result_data.email);\n      sessionStorage.setItem(\"userid\", result_data.userId);\n      sessionStorage.setItem(\"roleID\", result_data.roleID);\n      sessionStorage.setItem(\"userdata\", JSON.stringify(result_data));\n      console.log(result_data.roleID)\n      this.UserData = result_data;\n\n      if(result_data.roleID==0)\n      {\n        this.router.navigate(['Admin']);\n      }\n      else\n      {\n        this.router.navigate(['Home']);\n      }\n\n\n      return true;\n    // }\n    // else\n    // {\n    //   return false;\n    // }\n  }\n  Logout()\n  {\n    sessionStorage.setItem(\"isLoggedIn\", \"0\");\n    delete sessionStorage[\"email\"];\n    delete sessionStorage[\"userid\"];\n    delete sessionStorage[\"roleID\"];\n    delete sessionStorage[\"userdata\"];\n    delete sessionStorage[\"isLoggedIn\"];\n    this.router.navigate(['Login']);\n  }\n\n  UserProfileData()\n  {\n    return this.UserData;\n  }\n}\n","module.exports = \"\"","module.exports = \"<h2 style=\\\"text-align:center\\\">Change Password</h2>\\n\\n   \\n        <table style=\\\"align-content: center;margin-left:auto;margin-right:auto;\\\" height=\\\"300px\\\" width=\\\"400px\\\" >\\n            \\n    \\n            <tr>\\n    \\n                <td><b> Password:</b></td>\\n                <td>\\n                    <input type=\\\"password\\\" [(ngModel)]=\\\"UserData.passwd\\\" name=\\\"passwd\\\" required=\\\"required\\\">\\n                </td>\\n            </tr>\\n    \\n            <tr>\\n    \\n                <td><b>Confirm Password:</b></td>\\n                <td>\\n                    <input type=\\\"password\\\" [(ngModel)]=\\\"UserData.cnfmpassword\\\" name=\\\"cnfmpassword\\\" required=\\\"required\\\">\\n                </td>\\n            </tr>\\n    \\n            <tr>\\n                <td colspan=\\\"2\\\" style=\\\"text-align:center\\\">\\n                    <input type=\\\"button\\\" (click)=\\\"UpdateUserPassword()\\\" name=\\\"updtbtn\\\" class=\\\"btn btn-info\\\" value=\\\"Update Password\\\">\\n                    <button type=\\\"button\\\" routerLink=\\\"/Profile\\\" class=\\\"cancelbtn\\\">Cancel</button>\\n                           \\n                </td>\\n            </tr>\\n        </table>\\n\\n\\n   \"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n  UserData:any;\n  msg:string;\n  constructor(private DataService:DataService,private AuthService:AuthService,\n                private router:Router) { }\n                \n  ngOnInit() {\n    this.UserData=this.AuthService.UserProfileData();\n  }\n\n  UpdateUserPassword()\n  {\n\n    let StatusOfUpdate = this.DataService.UpdateUserPassword(this.UserData);\n    StatusOfUpdate.subscribe((result:any)=>{\n        if(result== 1)\n        {\n          this.router.navigate(['Profile']);\n        }\n        else\n        {\n          console.log(result)\n          this.msg = \"Something went wrong!\";\n        }\n    },(error)=>{\n      console.log(error)\n    });\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n\\n<body>\\n  <h1 style=\\\"text-align: center;\\\">Online Policy Management System</h1>\\n\\n  \\n<marquee>New updates:Insurance Policy</marquee>       \\n<button type=\\\"button\\\" routerLink=\\\"/\\\" class=\\\"btn btn-info\\\">DashBoard</button><br>\\n<table class=\\\"table\\\">\\n<tr>\\n<th>Claim ID</th>\\n<th>Claim Status</th>\\n<th>Claim remarks</th>\\n<!-- <th>Premium Amount</th> -->\\n<!-- <th>Total Premium Count </th> -->\\n<th></th>\\n\\n</tr>\\n   <!-- <tr *ngFor=\\\"let psdata of this.CustPolicyData.premiumschedule.historyofpaidpremium\\\"> -->\\n   \\n    <tr  *ngFor=\\\"let ctdata of this.ClaimTrackerData\\\">\\n     \\n       <td>{{ctdata.ctid}}</td>\\n       <td>{{ctdata.claimstatus}}</td>\\n       <td>{{ctdata.remarks}}</td>\\n       <!-- <td>{{psdata.historyofpaidpremium.paiddate | date:'yyyy-MM-dd HH:mm:ss' }}</td> -->\\n       <!-- <td>{{this.custdata.premiumamout}}</td> -->\\n       <!-- <td>14</td> -->\\n  \\n    </tr>\\n       \\n       \\n  \\n\\n   <!-- </tr> -->\\n\\n</table>\\n\\n\\n\\n</body>\\n\\n</html>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-claim-tracker',\n  templateUrl: './claim-tracker.component.html',\n  styleUrls: ['./claim-tracker.component.css']\n})\nexport class ClaimTrackerComponent implements OnInit {\n\n  ClaimTrackerData:any\n  constructor(public service: AuthService,private DataService:DataService) { }\n\n  ngOnInit() {\n\n    let StatusOfPremiumSearch = this.DataService.GetClaimTrackerById(sessionStorage.userid)\n      StatusOfPremiumSearch.subscribe((result:any)=>{\n        \n        //  console.log(result);\n        //  let id =element.cpid;\n        //  this.PremiumScheduleData.push(result);\n        this.ClaimTrackerData=result\n        // elementps.historyofpaidpremium=result\n        // console.log(this.HistoryOfPaidPremiums)\n        \n      },(error)=>{\n        console.log(error)\n      });\n\n  }\n\n}\n","module.exports = \".card {\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\n    max-width: 290px;\\n    /* margin: auto;  */\\n    text-align: center;\\n    top: 40px;\\n  }\\n  \\n  .title {\\n    color: grey;\\n    font-size: 18px;\\n  }\\n  \\n  button {\\n    border: none;\\n    outline: 0;\\n    display: inline-block;\\n    padding: 8px;\\n    color: white;\\n    background-color: #000;\\n    text-align: center;\\n    cursor: pointer;\\n    width: 100%;\\n    font-size: 18px;\\n  }\\n  \\n  a {\\n    text-decoration: none;\\n    font-size: 22px;\\n    color: black;\\n  }\\n  \\n  button:hover, a:hover {\\n    opacity: 0.7;\\n  }\\n  \\n  .bg-cn {\\n    min-height: 552px;\\n    background-image: url(\\\"/assets/images/abt1.jpg\\\");\\n    background-size: cover;\\n  }\\n\"","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\\\">\\n\\n<div class=\\\"bg-cn\\\" style=\\\"height: 100%;\\\">\\n     <table style=\\\"width: 100%;\\\">\\n         <tr>\\n             <td>\\n                <div class=\\\"card\\\" style=\\\"margin-left: 40%;\\\">\\n                    <img src=\\\"/src/assets/avt2.jpg\\\" alt=\\\"Akash\\\" style=\\\"height: 250px; width:100%;\\\">\\n                    <h3>Akash Wadhawane</h3>\\n                    <p class=\\\"title\\\">Developer,CDAC</p>\\n                    <p>Sunbeam Infotech</p>\\n                    <!-- <a href=\\\"#\\\"><i class=\\\"fa fa-dribbble\\\"></i></a>\\n                    <a href=\\\"#\\\"><i class=\\\"fa fa-twitter\\\"></i></a>\\n                    <a href=\\\"#\\\"><i class=\\\"fa fa-linkedin\\\"></i></a>\\n                    <a href=\\\"#\\\"><i class=\\\"fa fa-facebook\\\"></i></a> -->\\n                    <p>\\n                    PRN    : 190840820111 <br />\\n                    Course : PG-DAC       <br />\\n                    Mobile : 8149281827     <br />\\n                    Email  : akash3699@gmail.com   <br />\\n                    </p>\\n                    <!-- <p><button>Contact</button></p> -->\\n                    </div>\\n             </td>\\n         </tr>\\n     </table>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact-us',\n  templateUrl: './contact-us.component.html',\n  styleUrls: ['./contact-us.component.css']\n})\nexport class ContactUsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  serverurl:string=\"http://13.233.187.155:8080/DacAug2019/\";\n  // serverurl:string=\"http://localhost:8080/DacAug2019/\"\n  constructor(public http: HttpClient) { }\n\n  LoginData(user: any) {\n    return this.http.post(this.serverurl+\"user/login\" , user);\n  }\n  SignupData(signup_data: any) {\n    return this.http.post(this.serverurl+\"user/register\", signup_data);\n  }\n\n  AddPolicyData(policy_data: any) {\n    return this.http.post(this.serverurl+\"policy/register\", policy_data);\n  }\n\n  ForgotUserPasswordData(emaildata: any) {\n    return this.http.post(this.serverurl+\"user/forgotpassword\", emaildata);\n  }\n\n  UserProfileData(userid: any)\n  {\n    return this.http.get(this.serverurl+\"user/userdetails/\" + userid);\n  }\n\n  GetAllPolicyData()\n  {\n    return this.http.get(this.serverurl+\"policy/allpolicies\");\n  }\n\n  GetAllUsersPolicyData()\n  {\n    return this.http.get(this.serverurl+\"user/alluserpolicydetails\");\n  }\n\n  GetAllPolicyDataById(policyid:any)\n  {\n    return this.http.get(this.serverurl+\"policy/\"+policyid);\n  }\n\n  BuyPolicy(UserPolicyData:any)\n  {\n    return this.http.post(this.serverurl+\"user/buypolicy\",UserPolicyData);\n  }\n\n  UpdatePolicy(PolicyData:any)\n  {\n    return this.http.post(this.serverurl+\"policy/update\",PolicyData);\n  }\n\n\n  GetCustPolicyData(Userid:any)\n  {\n    return this.http.get(this.serverurl+\"user/userpolicydetails/\"+Userid);\n  }\n\n  GetCustPolicyDataByPremiumScheduleId(PremiumScheduleId:any)\n  {\n    return this.http.get(this.serverurl+\"custpolicy/getcustpolicydetailsbypremiumschedule/\"+PremiumScheduleId);\n  }\n\n  GetCustPolicyDataByCustPolicyId(CustPolicyId:any)\n  {\n    return this.http.get(this.serverurl+\"custpolicy/getnextpremiumschedulebycustpolicyid/\"+CustPolicyId);\n  }\n  // GetUserByUserId(uname: any)\n  // {\n  //   return this.http.get(\"http://localhost:4000/editprofile/\" + uname);\n  // }\n  UpdateUserData(UserData)\n  {\n    return this.http.post(this.serverurl+\"user/updateuserdetails/\" + UserData.userId, UserData);\n  }\n\n  UpdateUserPassword(UserData)\n  {\n    return this.http.post(this.serverurl+\"user/userdetails/changepasswd/\" + UserData.userId, UserData);\n  }\n\n  GetCustPolicyPremiumData(CustPolicyId:any)\n  {\n    return this.http.get(this.serverurl+\"custpolicy/getnextpremiumschedule/\"+CustPolicyId);\n  }\n\n  PayCustPolicyPremium(CustPolicyId:any)\n  {\n    return this.http.get(this.serverurl+\"custpolicy/paynextpremiumschedule/\"+CustPolicyId);\n  }\n\n  GetPaidDateByPremiumSchedule(PremiumScheduleId:number)\n  {\n    return this.http.get(this.serverurl+\"custpolicy/gethistoryofpaidpremiumbypremiumscheduleid/\"+PremiumScheduleId);\n  }\n\n  GetClaimTrackerById(Userid:number)\n  {\n    return this.http.get(this.serverurl+\"user/userclaimtrackerdetails/\"+Userid);\n  }\n\n  GetClaimTrackerByCTId(CTid:number)\n  {\n    return this.http.get(this.serverurl+\"user/userclaimtrackerdetailsbyid/\"+CTid);\n  }\n\n  AddClaimTrackerById(Userid:number,ClaimTrackerData:any)\n  {\n    return this.http.post(this.serverurl+\"user/userclaimtrackerdetails/\"+ClaimTrackerData.userId,ClaimTrackerData);\n  }\n\n  UpdateClaimTrackerById(ClaimTrackerId:number,ClaimTrackerData:any)\n  {\n    return this.http.post(this.serverurl+\"user/userclaimtrackerdetailsbyid/\"+ClaimTrackerData.ctid,ClaimTrackerData);\n  }\n\n  GetAllClaimTrackers()\n  {\n    return this.http.get(this.serverurl+\"user/userallclaimtrackerdetails\");\n  }\n\n}\n","module.exports = \".container{\\n  width: 30%;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1><b>Edit Profile</b></h1>\\n  <!-- <label for=\\\"userId\\\">UserId</label> -->\\n  <input [(ngModel)]=\\\"UserData.userId\\\" hidden readonly type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"userId\\\" name=\\\"userId\\\">\\n  <label for=\\\"email\\\">Email Address</label>\\n  <input [(ngModel)]=\\\"UserData.email\\\" readonly type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\">\\n  <label for=\\\"fname\\\">Fisrt Name</label>\\n  <input [(ngModel)]=\\\"UserData.fname\\\" placeholder=\\\"Enter First Name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fname\\\"\\n    name=\\\"fname\\\">\\n  <label for=\\\"mname\\\">Middle Name</label>\\n  <input [(ngModel)]=\\\"UserData.mname\\\" type=\\\"text\\\" placeholder=\\\"Enter Middle Name\\\" class=\\\"form-control\\\" id=\\\"mname\\\"\\n    name=\\\"mname\\\">\\n  <label for=\\\"lname\\\">Last Name</label>\\n  <input [(ngModel)]=\\\"UserData.lname\\\" type=\\\"text\\\" placeholder=\\\"Enter Last Name\\\" class=\\\"form-control\\\" id=\\\"lname\\\"\\n    name=\\\"lname\\\">\\n  <label for=\\\"nname\\\">Nominee Name</label>\\n  <input [(ngModel)]=\\\"UserData.nname\\\" type=\\\"text\\\" placeholder=\\\"Enter Nominee Name\\\" class=\\\"form-control\\\" id=\\\"nname\\\"\\n    name=\\\"nname\\\">\\n  <label for=\\\"nrelation\\\">Nominee Relation</label>\\n  <input [(ngModel)]=\\\"UserData.nrelation\\\" type=\\\"text\\\" placeholder=\\\"Enter Nominee Relation\\\" class=\\\"form-control\\\"\\n    id=\\\"nrelation\\\" name=\\\"nrelation\\\">\\n  <label for=\\\"mobile\\\">Phone Number</label>\\n  <input [(ngModel)]=\\\"UserData.mobile\\\" style=\\\" margin: 5px 0px;\\\" placeholder=\\\"Enter Mobile No\\\" type=\\\"text\\\"\\n    class=\\\"form-control\\\" id=\\\"mobile\\\" name=\\\"mobile\\\">\\n  <label for=\\\"dob\\\">Date of Birth: {{this.dob |  date:'yyyy-MM-dd'}}</label>\\n  <input [(ngModel)]=\\\"UserData.dob\\\" type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"dob\\\" name=\\\"dob\\\">\\n  <label for=\\\"gender\\\">Gender</label>\\n  <select id=\\\"inputState\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"UserData.gender\\\" name=\\\"gender\\\">\\n    <option selected>Choose...</option>\\n    <option [value]=\\\"MALE\\\">MALE</option>\\n    <option [value]=\\\"FEMALE\\\">FEMALE</option>\\n    <option [value]=\\\"OTHER\\\">OTHER</option>\\n  </select>\\n  <button type=\\\"button\\\" (click)=\\\"UpdateUserData()\\\" class=\\\"btn btn-primary mt-4\\\">Update</button>\\n  <button type=\\\"button\\\" routerLink=\\\"/Profile\\\" class=\\\"btn btn-danger mt-4 ml-5\\\">Cancel</button>\\n  <span>\\n    {{msg}}\\n  </span>\\n</div>\\n\\n\\n<!-- <div class=\\\"container\\\">\\n  <form>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-6\\\">\\n        <label for=\\\"inputEmail4\\\">Email</label>\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"inputEmail4\\\">\\n      </div>\\n      <div class=\\\"form-group col-md-6\\\">\\n        <label for=\\\"inputPassword4\\\">Password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputPassword4\\\">\\n      </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Sign in</button>\\n  </form>\\n</div> -->\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from '../data.service';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit {\n  UserData:any;\n  dob:any;\n  msg:string;\n  constructor(public routes: ActivatedRoute,\n    public DataService: DataService,\n    public router: Router) {\n    this.msg = \"\";\n  }\n\n  ngOnInit() {\n    let EditParas = this.routes.paramMap;\n\n    EditParas.subscribe((params) => {\n      let userId = sessionStorage.userid;\n      let StatusOfUserSearched = this.DataService.UserProfileData(userId);\n      StatusOfUserSearched.subscribe((result: any) => {\n        // result.dob= new DatePipe(result.dob);\n          this.dob=result.dob;\n          this.UserData = result;\n          console.log(this.UserData);\n        \n      });\n    });\n  }\n  UpdateUserData()\n  {\n    let StatusOfUpdate = this.DataService.UpdateUserData(this.UserData);\n    StatusOfUpdate.subscribe((result:any)=>{\n        if(result== 1)\n        {\n          this.router.navigate(['Profile']);\n        }\n        else\n        {\n          console.log(result)\n          this.msg = \"Something went wrong!\";\n        }\n    },(error)=>{\n      console.log(error)\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<h2 style=\\\"text-align:center\\\">Forgot Password</h2>\\n\\n    <form  #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"ForgotPassword(myForm)\\\">\\n        <table style=\\\"align-content: center;margin-left:auto;margin-right:auto;\\\" height=\\\"300px\\\" width=\\\"400px\\\" >\\n            \\n    \\n            <tr>\\n    \\n                <td><b> Enter Email:</b></td>\\n                <td>\\n                    <input type=\\\"email\\\" required  ngModel name=\\\"email\\\" placeholder=\\\"Enter Email Address\\\">\\n                </td>\\n            </tr>\\n    \\n           \\n    \\n            <tr>\\n                <td colspan=\\\"2\\\" style=\\\"text-align:center\\\">\\n                    <input type=\\\"submit\\\"   name=\\\"updtbtn\\\" class=\\\"btn btn-info\\\" value=\\\"Get SignIn Link\\\">\\n    \\n                           \\n                </td>\\n\\n                {{msg}}\\n            </tr>\\n        </table>\\n\\n\\n    </form>\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  // data:any\n  msg:string;\n  constructor(private DataService:DataService,private router:Router) { }\n\n  ngOnInit() {\n  }\n\n  ForgotPassword(data:any)\n  {\n\n    if(data.form.value.email==undefined || data.form.value.email==null || data.form.value.email==\"\" )\n    {\n      console.log(data.form.value.email)\n      this.msg=\"Enter Valid Email Address\"\n\n    }\n    else\n    {\n      console.log(data.form.value.email)\n      let StatusofResult = this.DataService.ForgotUserPasswordData(data.form.value.email);\n    StatusofResult.subscribe((result)=>{\n      console.log(result)\n\n      if(result==1)\n      {\n        window.alert(\"Successfully Sent Email !! Please Check Email\")\n        this.router.navigate([\"/Login\"])\n\n      }\n      else{\n        window.alert(\"Something Went Wrong!! in Finding User details\")\n      }\n    },(error)=>{\n      console.log(error)\n      window.alert(\"Something Went Wrong!! in Finding User details\")\n    })\n\n    }\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n\\n<body>\\n  <h1 style=\\\"text-align: center;\\\">Online Policy Management System</h1>\\n\\n  \\n<marquee>New updates:Insurance Policy</marquee>       \\n<button type=\\\"button\\\" routerLink=\\\"/\\\" class=\\\"btn btn-info\\\">DashBoard</button><br>\\n<table class=\\\"table\\\">\\n<tr>\\n<th>Policy ID</th>\\n<th>Policy Name</th>\\n<th>Paid Date And Time</th>\\n<th>Premium Amount</th>\\n<!-- <th>Total Premium Count </th> -->\\n<th></th>\\n\\n</tr>\\n   <!-- <tr *ngFor=\\\"let psdata of this.CustPolicyData.premiumschedule.historyofpaidpremium\\\"> -->\\n   <ng-container *ngFor=\\\"let custdata of CustPolicyData;let i=index\\\">\\n    <tr  *ngFor=\\\"let psdata of custdata.premiumschedule\\\">\\n       <ng-container *ngIf=\\\"psdata.historyofpaidpremium.paiddate\\\">\\n       <td>{{this.custdata.policyid.policyid}}</td>\\n       <td>{{this.custdata.policyid.policyname}}</td>\\n       <td>{{psdata.historyofpaidpremium.paiddate | date:'yyyy-MM-dd HH:mm:ss' }}</td>\\n       <td>{{this.custdata.premiumamout}}</td>\\n       <!-- <td>14</td> -->\\n      </ng-container>\\n    </tr>\\n       \\n       \\n  </ng-container>\\n\\n   <!-- </tr> -->\\n\\n</table>\\n\\n\\n\\n</body>\\n\\n</html>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-historyof-paid-premium',\n  templateUrl: './historyof-paid-premium.component.html',\n  styleUrls: ['./historyof-paid-premium.component.css']\n})\nexport class HistoryofPaidPremiumComponent implements OnInit {\n\n  CustPolicyData:any\n  HistoryOfPaidPremiums:any=[]\n  constructor(public service: AuthService,private DataService:DataService) { }\n\n  ngOnInit() {\n\n    let StatusOfSearch = this.DataService.GetCustPolicyData(sessionStorage.userid);\n    StatusOfSearch.subscribe((result:any)=>{\n       console.log(result);\n       this.CustPolicyData=result;\n\n       this.CustPolicyData.forEach(elementcp => {\n        \n        elementcp.premiumschedule.forEach(elementps => {\n          // console.log(elementps)\n          let StatusOfPremiumSearch = this.DataService.GetPaidDateByPremiumSchedule(elementps.premiumscheduleid)\n      StatusOfPremiumSearch.subscribe((result:any)=>{\n        \n        //  console.log(result);\n        //  let id =element.cpid;\n        //  this.PremiumScheduleData.push(result);\n        this.HistoryOfPaidPremiums+=JSON.stringify(result)\n        elementps.historyofpaidpremium=result\n        // console.log(this.HistoryOfPaidPremiums)\n        \n      },(error)=>{\n        console.log(error)\n      });\n          \n        });\n        \n        \n        \n      });\n      \n      console.log(this.CustPolicyData)\n      \n    },(error)=>{\n      console.log(error)\n\n      this.HistoryOfPaidPremiums=JSON.parse(this.HistoryOfPaidPremiums)\n      console.log(this.HistoryOfPaidPremiums);\n      \n    });\n  }\n\n}\n","module.exports = \".fakeimg {\\n  height: 200px;\\n  background-color:rgb(146, 146, 253) ;\\n}\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n\\n<body>\\n  <h1 style=\\\"text-align: center;\\\">Online Insurance Management System</h1>\\n\\n\\n  <marquee>New updates:Insurance Policy</marquee>\\n  <button type=\\\"button\\\" routerLink=\\\"/AddPolicy\\\" class=\\\"btn btn-info\\\">Buy New Policy</button><br>\\n  <table class=\\\"table table-hover\\\">\\n      <thead>\\n    <tr>\\n      <th scope=\\\"col\\\">Policy ID</th>\\n      <th scope=\\\"col\\\">Policy Name</th>\\n      <th scope=\\\"col\\\">Policy Decription</th>\\n      <th scope=\\\"col\\\">Years</th>\\n      <th scope=\\\"col\\\">Buy Date</th>\\n      <th scope=\\\"col\\\">Premium Amount</th>\\n      <th scope=\\\"col\\\">Paid Premium Count</th>\\n      <th scope=\\\"col\\\">Total Insurance Amount </th>\\n      <th scope=\\\"col\\\">Next Premium Date </th>\\n      <th scope=\\\"col\\\">Premium Payment Frequency</th>\\n      <th scope=\\\"col\\\">Pay Premium</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let custdata of CustPolicyData\\\" routerLink=\\\"/PolicyDetails/{{this.custdata.policyid.policyid}}\\\">\\n      <!-- <ng-container *ngFor=\\\"let psdata of PremiumScheduleData\\\"> -->\\n      <td>{{this.custdata.policyid.policyid}}</td>\\n      <td>{{this.custdata.policyid.policyname}}</td>\\n      <td>{{this.custdata.policyid.policydescription}}</td>\\n      <td>{{this.custdata.policyid.policyduration}}</td>\\n      <td>{{this.custdata.buydate  |  date:'yyyy-MM-dd'}}</td>\\n      <td>{{this.custdata.premiumamout}}</td>\\n      <td>{{this.custdata.paidpremiumcount}}</td>\\n      <td>{{this.custdata.policyid.totalinsuranceamount}}</td>\\n      <td>{{this.custdata.premiumschedule.premiumdate  |  date:'yyyy-MM-dd' }}</td>\\n      <td>{{this.custdata.ps}}</td>\\n      <td *ngIf=\\\"this.custdata.premiumschedule.premiumdate\\\"><input type=\\\"button\\\" class=\\\"btn btn-info\\\"\\n          routerLink=\\\"/PayPremium/{{this.custdata.premiumschedule.premiumscheduleid}}\\\" value=\\\"Pay Premium\\\" /></td>\\n      <td *ngIf=\\\"!this.custdata.premiumschedule.premiumdate\\\">All Premiums are Paid</td>\\n      <!-- </ng-container> -->\\n      <!-- *ngIf=\\\"this.custdata.premiumschedule.premiumdate\\\" -->\\n    </tr>\\n    <tbody>\\n\\n\\n  </table>\\n\\n\\n\\n\\n</body>\\n\\n</html>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { DataService } from '../data.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  CustPolicyData:any\n  PremiumScheduleData:any\n  constructor( public service: AuthService,private DataService:DataService,private router:Router) { \n    if(this.service.isAdmin())\n    {\n      this.router.navigate(['Admin']);\n\n    }\n    else\n    {\n      this.router.navigate(['Home']);\n    }\n  }\n\n\n  GetCustPolicyData()\n  {\n    return this.CustPolicyData;\n  }\n\n\n  ngOnInit() {\n    let StatusOfSearch = this.DataService.GetCustPolicyData(sessionStorage.userid);\n    StatusOfSearch.subscribe((result:any)=>{\n       console.log(result);\n       this.CustPolicyData=result;\n\n       this.CustPolicyData.forEach(element => {\n        let StatusOfPremiumSearch = this.DataService.GetCustPolicyDataByCustPolicyId(element.cpid)\n      StatusOfPremiumSearch.subscribe((result:any)=>{\n        \n         console.log(result);\n        //  let id =element.cpid;\n        //  this.PremiumScheduleData.push(result);\n        element.premiumschedule=result\n        console.log(this.CustPolicyData)\n      },(error)=>{\n        console.log(error)\n      });\n  \n        \n      });\n      \n    },(error)=>{\n      console.log(error)\n    });\n\n    \n\n\n  }\n\n  }\n  \n\n","module.exports = \".container{\\n  width: 350px;\\n  padding: 20px;\\n  padding-top: 25px;\\n  box-sizing: border-box;\\n  box-shadow: 0 15px 25px rgb(23, 25, 26);\\n  border-radius: 10px;\\n}\\n\\n.copyright\\n{\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: center;\\n  justify-content: center;\\n  color:black;\\n  padding: 1.4em;\\n  text-align: center;\\n}\\n\\n.form-control\\n{\\n  width: 85%;\\n}\\n\\nh4\\n{\\n  text-align: center;\\n}\\n\\n.form-group{\\n  margin-left: 25px ;\\n}\\n\\n.btn{\\n  margin-left: 10px;\\n}\"","module.exports = \"\\n<div class=\\\"container\\\">\\n    <form role=\\\"form\\\" #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"FormValidation(myForm.value)\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"inputEmail4\\\">Email</label>\\n            <input type=\\\"text\\\" ngModel name=\\\"email\\\" pattern=\\\"[[a-zA-Z0-9_\\\\-\\\\.]+@([a-zA-Z0-9_\\\\-\\\\.]+)\\\\.[a-zA-Z]{2,5}]*\\\"\\n                #Vemail=\\\"ngModel\\\" class=\\\"form-control\\\" [class.alert-danger]=\\\" Vemail.touched   && Vemail.invalid\\\"\\n                id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\" required>\\n            <div *ngIf=\\\"Vemail.touched && Vemail.invalid\\\" style=\\\"width:20px;height: 20px;\\\"\\n                class=\\\"spinner-border text-danger\\\" role=\\\"status\\\">\\n                <span class=\\\"sr-only\\\">...</span>\\n            </div>\\n                 <div class=\\\"alert-danger\\\" *ngIf=\\\"Vemail.touched && Vemail.invalid\\\" style=\\\"width:50%;\\\">Email is not valid\\n            </div>\\n            <div class=\\\"alert-success\\\" *ngIf=\\\"Vemail.touched && Vemail.valid\\\" style=\\\"width: 50%;\\\">OK</div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"pwd\\\"><b>Password</b></label><br>\\n            <input ngModel type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Password\\\" name=\\\"passwd\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Login</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" routerLink=\\\"/SignUp\\\">Sign Up</button>\\n        </div>\\n            <div class=\\\"form-group\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondory\\\" routerLink=\\\"/ForgotPassword\\\">Forgot Password</button>\\n        </div>\\n        <div class=\\\"form-group\\\" style=\\\"color: red;\\\">\\n            <h4><b>{{msg}}</b></h4>\\n          </div>\\n      </form>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { DataService } from '../data.service';\nimport { MD5 } from 'crypto-js';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  user;\n  msg;\n  constructor( public Auth_service: AuthService,\n               public Data_service: DataService,\n               public router: Router) { }\n\n  ngOnInit() {\n  }\n\n  FormValidation(credentials: any)\n  {\n      if( credentials.email == \"\" || credentials.passwd == \"\" )\n      {\n          this.msg = \"Username/Password is required!!\";\n      }\n      else\n      {\n        this.Login(credentials);\n      }\n\n  }\n\n  Login(credentials: { email: any; passwd: any; })\n  {\n    \n    \n    let isLoggedIn = false;\n    let FindUser = this.Data_service.LoginData(credentials);\n    FindUser.subscribe((result: any) => {\n      console.log(result);\n      console.log(result.length);\n    //if(result.affectedRows != 0)\n    // if(result.length != 0)\n    // {\n      // this.user = result[0];\n      isLoggedIn = true;\n        if(isLoggedIn)\n        {\n          this.Auth_service.Login(result);\n            this.msg = \"\";\n            this.router.navigate(['Home']);\n        }\n        else\n        {\n            this.msg = \" Username / Password is wrong!!\";\n         }\n    // }\n    // else\n    // {\n    //     this.msg = \" Username / Password is wrong!!\";\n    // }\n    },(error)=>{\n            this.msg = \"Username / Password is wrong!!\";\n            \n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<h2 style=\\\"text-align:center\\\">Edit Profile</h2>\\n\\n    <form action=\\\"editprofile.php\\\"  method=\\\"POST\\\">\\n      <div class=\\\"container\\\" >\\n        <table style=\\\"align-content: center;margin-left:auto;margin-right:auto;\\\" height=\\\"300px\\\" width=\\\"400px\\\" >\\n            <tr>\\n                <td><b>First Name :</b></td>\\n                <td>\\n                    <input type=\\\"text\\\" name=\\\"fname\\\" value=\\\"\\\" required=\\\"required\\\">\\n                </td>\\n            </tr>\\n    \\n            <tr>\\n                <td><b>Middle Name :</b></td>\\n                <td>\\n                    <input type=\\\"text\\\" name=\\\"mname\\\" value=\\\"\\\" required=\\\"required\\\">\\n                </td>\\n            \\n            </tr>\\n    \\n            <tr>\\n                <td><b>Last Name :</b></td>\\n                <td>\\n                    <input type=\\\"text\\\" name=\\\"lname\\\" value=\\\"\\\" required=\\\"required\\\">\\n                </td>\\n            \\n            </tr>\\n    \\n            <tr>\\n                <td><b>Nominee Name :</b></td>\\n                <td>\\n                    <input type=\\\"text\\\" name=\\\"nname\\\" value=\\\"\\\" >\\n                </td>\\n            \\n            </tr>\\n    \\n            <tr>\\n                <td><b>Nominee Relation :</b></td>\\n                <td>\\n                    <input type=\\\"text\\\" name=\\\"nrelation\\\" value=\\\"\\\">\\n                </td>\\n            \\n            </tr>\\n    \\n            <tr>\\n                <td><b>Date of Birth :</b></td>\\n                <td>\\n                    <input type=\\\"date\\\" name=\\\"dob\\\" value=\\\"\\\" required=\\\"required\\\">\\n                </td>\\n            \\n            </tr>\\n    \\n            <tr>\\n                <td><b>Gender :</b></td>\\n                <td>\\n                    <input type=\\\"radio\\\" name=\\\"genderData\\\" value=\\\"M\\\" value=\\\"\\\" required=\\\"required\\\">Male\\n                    <input type=\\\"radio\\\" name=\\\"genderData\\\" value=\\\"F\\\">Female\\n                    <input type=\\\"radio\\\" name=\\\"genderData\\\" value=\\\"O\\\">Other\\n                </td>\\n            \\n            </tr>\\n\\n            <tr>\\n                <td><b>Mobile:</b></td>\\n                <td>\\n                    <input type=\\\"number\\\" name=\\\"mobile\\\" value=\\\"\\\" required=\\\"required\\\">\\n                </td>\\n            </tr>\\n    \\n            <tr>\\n                <td><b>Email:</b></td>\\n                <td>\\n                    <input type=\\\"email\\\" name=\\\"email\\\" value=\\\"\\\" required=\\\"required\\\">\\n                </td>\\n            </tr>\\n    \\n            <tr>\\n                <td><b>Address :</b></td>\\n                <td>\\n                    <input type=\\\"text\\\" name=\\\"address\\\" value=\\\"\\\" required=\\\"required\\\">\\n                </td>\\n            \\n            </tr>\\n    \\n            <tr>\\n                <td><b>City :</b></td>\\n                <td>\\n                    <input type=\\\"text\\\" name=\\\"city\\\" value=\\\"\\\" required=\\\"required\\\">\\n                </td>\\n            \\n            </tr>\\n    \\n            <tr>\\n                <td><b>State :</b></td>\\n                <td>\\n                    <input type=\\\"text\\\" name=\\\"state\\\" value=\\\"\\\" required=\\\"required\\\">\\n                </td>\\n            \\n            </tr>\\n\\n            <tr>\\n                <td><b>Pincode :</b></td>\\n                <td>\\n                    <input type=\\\"number\\\" name=\\\"pincode\\\" value=\\\"\\\" required=\\\"required\\\">\\n                </td>\\n            \\n            </tr>\\n    \\n    \\n            <tr>\\n    \\n                <td><b>Password:</b></td>\\n                <td>\\n                    <input type=\\\"password\\\" name=\\\"password\\\" required=\\\"required\\\">\\n                </td>\\n            </tr>\\n    \\n            <tr>\\n                <td colspan=\\\"2\\\" style=\\\"text-align:center\\\">\\n                    <input type=\\\"submit\\\" name=\\\"updtbtn\\\" class=\\\"btn btn-info\\\" value=\\\"Update Profile\\\">\\n    \\n                           \\n                </td>\\n            </tr>\\n        </table>\\n\\n      </div>\\n    </form>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.css']\n})\nexport class MyProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 style=\\\"text-align:center\\\">Pay Premium</h2>\\n\\n    <form >\\n        <table style=\\\"align-content: center;margin-left:auto;margin-right:auto;\\\" height=\\\"300px\\\" width=\\\"400px\\\" >\\n            \\n    \\n            <!-- <tr>\\n    \\n                <td><b> Policy Name:</b></td>\\n                <td>\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"PremiumSchedule.policyduration\\\" name=\\\"PolicyName\\\" disabled value=\\\"Market Plus III\\\" required=\\\"required\\\">\\n                </td>\\n            </tr> -->\\n    \\n            <tr>\\n    \\n                <td><b>Premium Amount</b></td>\\n                <td>\\n                    <input type=\\\"number\\\" [(ngModel)]=\\\"PolicyData.premiumamout\\\" disabled name=\\\"premiumamout\\\" required=\\\"required\\\">\\n                </td>\\n            </tr>\\n\\n            <tr>\\n    \\n              <td><b>Premium Date</b></td>\\n              <td>\\n                  {{PremiumSchedule.premiumdate |  date:'yyyy-MM-dd'}}\\n              </td>\\n          </tr>\\n    \\n            <tr>\\n                <td colspan=\\\"2\\\" style=\\\"text-align:center\\\">\\n                    <input type=\\\"submit\\\" (click)=\\\"PayPremiumNow()\\\" name=\\\"paybtn\\\" class=\\\"btn btn-info\\\" value=\\\"Pay Premium\\\">\\n    \\n                           \\n                </td>\\n            </tr>\\n        </table>\\n\\n\\n    </form>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-pay-premium',\n  templateUrl: './pay-premium.component.html',\n  styleUrls: ['./pay-premium.component.css']\n})\nexport class PayPremiumComponent implements OnInit {\n  PremiumSchedule:any\n  PolicyData:any\n  PremiumScheduleId:any\n  constructor(private DataService:DataService,private router:Router,private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      this.PremiumScheduleId = params['premiumscheduleid'];\n     console.log(this.PremiumScheduleId);\n   });\n\n   let statusofresult= this.DataService.GetCustPolicyPremiumData(this.PremiumScheduleId)\n   \n    statusofresult.subscribe((result)=>{\n      \n      console.log(result);\n      this.PremiumSchedule=result\n\n    },(error)=>{\n      console.log(error);\n    })\n\n    let statusofpolicyresult= this.DataService.GetCustPolicyDataByPremiumScheduleId(this.PremiumScheduleId)\n   \n    statusofpolicyresult.subscribe((result)=>{\n      console.log(result);\n      this.PolicyData=result\n\n    },(error)=>{\n      console.log(error);\n    })\n\n\n  }\n\n\n  PayPremiumNow()\n  {\n    let statusofpolicyresult= this.DataService.PayCustPolicyPremium(this.PremiumScheduleId)\n   \n    statusofpolicyresult.subscribe((result)=>{\n      console.log(result);\n      window.alert(JSON.stringify(result))\n      this.router.navigate([\"Home\"])\n    },(error)=>{\n      console.log(error);\n    })\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 style=\\\"text-align:center\\\">Policy Details</h2>\\n\\n    \\n        <table style=\\\"align-content: center;margin-left:auto;margin-right:auto;\\\" height=\\\"300px\\\" width=\\\"400px\\\" >\\n            \\n    \\n            <tr>\\n    \\n                <td><b> Policy Name:</b></td>\\n                <td>\\n                    <input type=\\\"text\\\"  name=\\\"policyname\\\" value=\\\"{{this.PolicyData.policyname}}\\\" required=\\\"required\\\">\\n                </td>\\n            </tr>\\n    \\n            <tr>\\n    \\n                <td><b>Benefits:</b></td>\\n                <td>\\n                    \\n                    <textarea name=\\\"policydescription\\\" id=\\\"policydescription\\\" class=\\\"form-control\\\" rows=\\\"3\\\" required=\\\"required\\\">{{this.PolicyData.policydescription}}</textarea>\\n                    \\n                    <!-- <input type=\\\"text\\\" disabled value=\\\"{{this.PolicyData.policydescription}}\\\" name=\\\"policydescription\\\" required=\\\"required\\\"> -->\\n                </td>\\n            </tr>\\n\\n            <tr>\\n    \\n                <td><b>Years:</b></td>\\n                <td>\\n                    <input type=\\\"Number\\\"  value=\\\"{{this.PolicyData.policyduration}}\\\" name=\\\"policyduration\\\" required=\\\"required\\\">\\n                </td>\\n            </tr>\\n\\n            <tr>\\n    \\n                <td><b>Amount for Insurance:</b></td>\\n                <td>\\n                    <input type=\\\"Number\\\"  value=\\\"{{this.PolicyData.totalinsuranceamount}}\\\" name=\\\"totalinsuranceamount\\\" required=\\\"required\\\">\\n                </td>\\n            </tr>\\n            <tr>\\n                    <input type=\\\"button\\\" routerLink=\\\"/Home\\\"  name=\\\"bckbtn\\\" class=\\\"btn btn-info\\\" value=\\\"Back\\\">\\n            </tr>\\n            \\n        </table>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-policy-details',\n  templateUrl: './policy-details.component.html',\n  styleUrls: ['./policy-details.component.css']\n})\nexport class PolicyDetailsComponent implements OnInit {\n\n  PolicyData:any\n  policyID:any\n  constructor(private DataService:DataService,private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n\n\n    this.activatedRoute.params.subscribe(params => {\n       this.policyID = params['policyid'];\n      console.log(this.policyID);\n    });\n      let StatusOfSearch = this.DataService.GetAllPolicyDataById(this.policyID)\n    StatusOfSearch.subscribe((result:any)=>{\n       console.log(result);\n       this.PolicyData=result;  \n\n    },(error)=>{\n      console.log(error)\n    });\n\n\n\n      \n    \n\n    \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 style=\\\"text-align:center\\\">Premium Calculator</h2>\\n\\n    <form >\\n      <div class=\\\"container\\\" >\\n        <table style=\\\"align-content: center;margin-left:auto;margin-right:auto;\\\" height=\\\"300px\\\" width=\\\"400px\\\" >\\n            \\n\\n          <tr>\\n              <td><b> Policy Name:</b></td>\\n              <td>\\n             <input type=\\\"text\\\" [(ngModel)]=\\\"PolicyData.policyname\\\" readonly name=\\\"policyname\\\" id=\\\"policyname\\\" >\\n             </td>\\n              \\n          </tr>\\n            <tr>\\n                <td><b>Payment Frequency:</b></td>\\n               <td>\\n               <select style=\\\"background-color: aliceblue;\\\" name=\\\"ps\\\" [(ngModel)]=\\\"PolicyData.ps\\\" placeholder=\\\"Select Premium Frequency\\\" required id=\\\"ps\\\" class=\\\"form-control\\\">\\n                    <!-- <option value=\\\"\\\" style=\\\"color:black;\\\" disabled selected hidden>Select your option</option>  -->\\n                <option value=\\\"YEARLY\\\" >Yearly</option>\\n                 <option value=\\\"MONTHLY\\\">Monthly</option>\\n                 <option value=\\\"WEEKLY\\\">Weekly</option>\\n               </select>\\n              </td>\\n            \\n            </tr>\\n    \\n            \\n    \\n            <tr>\\n                <td colspan=\\\"2\\\" style=\\\"text-align:center\\\">\\n                    <input type=\\\"button\\\" (click)=\\\"CalculatePremium()\\\"  name=\\\"calbtn\\\" class=\\\"btn btn-info\\\" value=\\\"Calculate Premium\\\">\\n    \\n                           \\n                </td>\\n            </tr>\\n\\n            <tr>\\n    \\n                <td><b>Premium Amount:</b></td>\\n                <td>\\n                    <input type=\\\"number\\\" [(ngModel)]=\\\"PolicyData.premiumamout\\\" placeholder=\\\"Premium Amount\\\" disabled name=\\\"premiumamout\\\" required>\\n                </td>\\n            </tr>\\n\\n            <tr>\\n    \\n                <td><b>Premium Count:</b></td>\\n                <td>\\n                    <input type=\\\"number\\\" [(ngModel)]=\\\"PolicyData.totalpremiumcount\\\" placeholder=\\\"Total Premium Count\\\" disabled name=\\\"totalpremiumcount\\\" required>\\n                </td>\\n            </tr>\\n\\n            <tr>\\n                <td colspan=\\\"2\\\" style=\\\"text-align:center\\\">\\n                    <input type=\\\"button\\\" (click)=\\\"BuyPolicy()\\\" name=\\\"buybtn\\\" class=\\\"btn btn-info\\\" value=\\\"Buy Policy\\\">\\n    \\n                    <input type=\\\"button\\\" routerLink=\\\"/Home\\\"  name=\\\"cancel\\\" class=\\\"btn btn\\\" value=\\\"Cancel\\\"> \\n                    \\n                </td>\\n            </tr>\\n        </table>\\n        {{msg}}\\n      </div>\\n    </form>\"","import { Component, OnInit, Query } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Alert } from 'selenium-webdriver';\n\n@Component({\n  selector: 'app-premium-calulator',\n  templateUrl: './premium-calulator.component.html',\n  styleUrls: ['./premium-calulator.component.css']\n})\nexport class PremiumCalulatorComponent implements OnInit {\n\n  PolicyData:any;\n  msg:string\n  param1: string;\n\nconstructor(private route: ActivatedRoute,private DataService:DataService,private router:Router) {\n    console.log('Called Constructor');\n    this.route.queryParams.subscribe(params => {\n        this.param1 = this.route.snapshot.params.policyId\n        console.log(this.param1)\n    });\n}\n  ngOnInit() {\n\n    let StatusOfUpdate = this.DataService.GetAllPolicyDataById(this.param1)\n    StatusOfUpdate.subscribe((result:any)=>{\n      this.PolicyData=result\n      console.log(this.PolicyData)\n    },(error)=>{\n      console.log(error)\n    });\n\n  }\n\n  CalculatePremium(){\n    let daysofyears:number=this.PolicyData.policyduration*365\n    if(this.PolicyData.ps==\"\" || this.PolicyData.ps==null || this.PolicyData.ps==undefined )\n    {\n      \n      this.msg=\"Payment Frequency is required\"\n    } \n    else\n    {\n      this.msg=\"\"\n      if(this.PolicyData.ps==\"YEARLY\")\n    {\n      this.PolicyData.totalpremiumcount = daysofyears/365\n\n    }\n    else{\n      if(this.PolicyData.ps==\"MONTHLY\"){\n\n        this.PolicyData.totalpremiumcount = daysofyears/12;\n\n      }\n      else{\n        if(this.PolicyData.ps==\"WEEKLY\"){\n\n          this.PolicyData.totalpremiumcount = daysofyears/7\n        }\n      }\n\n    }\n    }\n    this.PolicyData.premiumamout = this.PolicyData.totalinsuranceamount/this.PolicyData.totalpremiumcount\n    \n  }\n  BuyPolicy(){\n    if(this.PolicyData.premiumamout==\"\" || this.PolicyData.premiumamout==undefined ||\n    this.PolicyData.policyid==\"\" || this.PolicyData.policyid==undefined )\n    {\n      console.log(this.PolicyData);\n      \n\n      this.msg=\"All Fields Are Required to Proceed\"\n    }\n    else{\n      this.msg=\"\"\n      this.PolicyData.userid= sessionStorage.userid;\n    this.PolicyData.policyid=this.param1;\n    let StatusOfUpdate = this.DataService.BuyPolicy(this.PolicyData)\n    StatusOfUpdate.subscribe((result:any)=>{\n      \n      console.log(result)\n      alert(\"Purchased SuccessFully\")\n      this.router.navigate([\"Home\"])\n    },(error)=>{\n      console.log(error)\n    });\n    }\n\n  }\n\n}\n","module.exports = \".container{\\n    width: 30%;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <form>\\n        <h3 style=\\\"color: rgb(124, 8, 8);\\\"><b>Hello {{UserProfileData.fname}}</b></h3>\\n        \\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <label for=\\\"exampleInputEmail1\\\">First Name</label>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <label for=\\\"exampleInputEmail1\\\">{{this.UserProfileData.fname}}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <label for=\\\"exampleInputEmail1\\\">Middle Name</label>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <label for=\\\"exampleInputEmail1\\\">{{this.UserProfileData.mname}}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <label for=\\\"exampleInputEmail1\\\">Last Name</label>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <label for=\\\"exampleInputEmail1\\\">{{this.UserProfileData.lname}}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <label for=\\\"exampleInputEmail1\\\">Nominee Name</label>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <label for=\\\"exampleInputEmail1\\\">{{this.UserProfileData.nname}}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <label for=\\\"exampleInputEmail1\\\">Nominee Relation</label>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <label for=\\\"exampleInputEmail1\\\">{{this.UserProfileData.nrelation}}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <label for=\\\"exampleInputEmail1\\\">Gender</label>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <label for=\\\"exampleInputEmail1\\\">{{this.UserProfileData.gender}}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <label for=\\\"exampleInputEmail1\\\">Phone Number</label>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <label for=\\\"exampleInputEmail1\\\">{{this.UserProfileData.mobile}}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <label for=\\\"exampleInputEmail1\\\">Date of Birth</label>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <label for=\\\"exampleInputEmail1\\\">{{this.UserProfileData.dob |  date:'yyyy-MM-dd'}}</label>\\n            </div>\\n        </div>\\n\\n        <button type=\\\"button\\\" routerLink=\\\"/EditProfile\\\" class=\\\"btn btn-primary\\\">Edit Profile</button>\\n    </form>\\n</div>\\n\\n\\n\\n<!-- <div class=\\\"imgcontainer\\\">\\n    <img src=\\\"./assets/icons-user-profile.png\\\" style=\\\"height: 150px; width: 150px;\\\"\\n        alt=\\\"Online Insurance Management System_Icon\\\" class=\\\"Icon\\\">\\n</div>\\n<h2 style=\\\"color: rgb(124, 8, 8);\\\"><b>{{UserProfileData.fname}}</b></h2>\\n<div class=\\\"container\\\" style=\\\"text-align: left\\\">\\n    <label><b>First Name</b></label>\\n    <div>{{this.UserProfileData.fname}}</div>\\n    <label><b>Last Name</b></label>\\n    <div>{{this.UserProfileData.lname}}</div>\\n\\n    <label><b>Gender</b></label>\\n    <div>{{this.UserProfileData.gender}}</div>\\n\\n    <label><b>Phone Number</b></label>\\n    <div>+91 {{this.UserProfileData.mobile}}</div>\\n\\n    <label><b>Date of Birth</b></label>\\n    <div>{{this.UserProfileData.dob |  date:'yyyy-MM-dd'}}</div>\\n\\n    <button type=\\\"submit\\\" routerLink=\\\"/EditProfile\\\">Edit Profile</button>\\n\\n    <b style=\\\"position: absolute; left: 83px;\\\">{{msg}}</b>\\n</div> -->\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from '../data.service';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  \n   UserProfileData: any;\n  \n\n  constructor(public AuthService : AuthService,\n              public DataService : DataService) {\n  \n                this.UserProfileData=this.AuthService.UserProfileData();\n                \n              }\n\n  ngOnInit() {\n    \n    let FindUser = this.DataService.UserProfileData(sessionStorage.userid);\n    FindUser;\n    FindUser.subscribe((result: any)=>{\n      console.log(result);\n        this.UserProfileData = result;\n      \n    });\n  }\n  \n}\n\n\n\n// console.log(this.UserData.uname);\n// console.log(this.UserData.pwd);\n// console.log(this.UserProfileData.uname);\n// console.log(this.UserProfileData.email);\n// console.log(this.UserProfileData.phone);\n// console.log(this.UserProfileData.dob);","module.exports = \".container{\\n  width: 350px;\\n  padding: 20px;\\n  padding-top: 25px;\\n  box-sizing: border-box;\\n  box-shadow: 0 15px 25px rgb(23, 25, 26);\\n  border-radius: 10px;\\n}\\n\\n.copyright\\n{\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: center;\\n  justify-content: center;\\n  color:black;\\n  padding: 1.4em;\\n  text-align: center;\\n}\\n\\n.btn{\\n  margin: 20px;\\n  width: 30%;\\n}\\n\\n.form-control\\n{\\n  width: 85%;\\n}\\n\\nh4\\n{\\n  text-align: center;\\n}\\n\\n.form-group{\\n  margin-left: 25px ;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <form #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"FormValidation(myForm)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"inputEmail4\\\">Email</label>\\n      <input type=\\\"text\\\" ngModel name=\\\"email\\\" pattern=\\\"[[a-zA-Z0-9_\\\\-\\\\.]+@([a-zA-Z0-9_\\\\-\\\\.]+)\\\\.[a-zA-Z]{2,5}]*\\\"\\n          #Vemail=\\\"ngModel\\\" class=\\\"form-control\\\" [class.alert-danger]=\\\" Vemail.touched   && Vemail.invalid\\\"\\n          id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\" title=\\\"Enter Valid Email Address\\\" required>\\n      <div *ngIf=\\\"Vemail.touched && Vemail.invalid\\\" style=\\\"width:20px;height: 20px;\\\"\\n          class=\\\"spinner-border text-danger\\\" role=\\\"status\\\">\\n          <span class=\\\"sr-only\\\">...</span>\\n      </div>\\n           <div class=\\\"alert-danger\\\" *ngIf=\\\"Vemail.touched && Vemail.invalid\\\" style=\\\"width:50%;\\\">Email is not valid\\n      </div>\\n      <div class=\\\"alert-success\\\" *ngIf=\\\"Vemail.touched && Vemail.valid\\\" style=\\\"width: 50%;\\\">OK</div>\\n  </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"inputEmail4\\\">Password</label>\\n        <input type=\\\"password\\\" ngModel #Vpass=\\\"ngModel\\\" required\\n          pattern=\\\"(?=^.{8,}$)((?=.*\\\\d)|(?=.*\\\\W+))(?![.\\\\n])(?=.*[A-Z])(?=.*[a-z]).*\\\" class=\\\"form-control\\\"\\n          name=\\\"passwd\\\" id=\\\"inputEmail4\\\" placeholder=\\\"Password\\\" title=\\\"Passwords will contain minimum 8 characters, at least 1 upper case letter, 1 lower case letter ,least 1 number or special character\\\">\\n        <ng-container class=\\\"alert-danger\\\" *ngIf=\\\"Vpass.touched && Vpass.invalid\\\" style=\\\"width:200%;\\\">\\n          Passwords will contain minimum 8 characters, at least 1 upper case letter, 1 lower case letter ,least 1 number or special character\\n        </ng-container>\\n        <div class=\\\"alert-success\\\" *ngIf=\\\"Vpass.touched && Vpass.valid\\\" style=\\\"width: 50%;\\\">OK</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"exampleInputPassword1\\\">Phone Number +91 </label>\\n      <input type=\\\"number\\\" ngModel class=\\\"form-control\\\" id=\\\"mobile\\\" name=\\\"mobile\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" pattern=\\\"[1-9]{1}[0-9]{9}\\\" title=\\\"Please enter exactly 10 digits\\\" required>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Signup</button>\\n    <button type=\\\"button\\\" routerLink=\\\"/Home\\\" id=\\\"btn\\\" class=\\\"btn btn-danger\\\">Cancel</button>\\n    <button *ngIf=\\\"num\\\" routerLink=\\\"/Login\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">Go to Login</button>\\n  </form>\\n  <div class=\\\"form-group\\\" style=\\\"color: red;\\\">\\n    <h4><b>{{msg}}</b></h4>\\n  </div>\\n</div>\\n\\n\\n<!-- \\n<div class=\\\"container mt-5\\\">\\n  <form #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"FormValidation(myForm)\\\">\\n    <div class=\\\"container\\\" style=\\\"text-align: left\\\">\\n      <label for=\\\"email\\\">Email</label><br>\\n      <input ngModel type=\\\"email\\\" placeholder=\\\"Enter Email\\\" name=\\\"email\\\" required>\\n      <br>\\n      <label for=\\\"phone\\\"><b>Phone Number</b></label><br>\\n      <input ngModel type=\\\"number\\\" placeholder=\\\"Enter Phone Number\\\" name=\\\"mobile\\\" required>\\n      <br>\\n      <label for=\\\"pwd\\\"><b>Password</b></label><br>\\n      <input ngModel type=\\\"password\\\" placeholder=\\\"Enter Password\\\" name=\\\"passwd\\\" required>\\n      <br>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Sign Up</button><br>\\n      <button type=\\\"button\\\" routerLink=\\\"/Home\\\" class=\\\"btn btn-danger\\\">Cancel</button>\\n      <button *ngIf=\\\"num\\\" type=\\\"button\\\" routerLink=\\\"/Login\\\" class=\\\"btn btn-primary\\\">Go to Login</button><br>\\n      <label style=\\\"position: absolute; left: 150px; \\\"><b>{{msg}}</b></label>\\n    </div>\\n  </form>\\n</div> -->\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { MD5 } from 'crypto-js';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n  msg: string;\n  num: number;\n  constructor(private service: DataService) { this.num = 0 }\n\n  ngOnInit() { }\n\n  FormValidation(UserData: any) {\n    if ( UserData.form.value.email == \"\" ||\n      UserData.form.value.mobile == \"\" || \n      UserData.form.value.passwd == \"\") {\n      this.msg = \"All fields are compulsory!!\";\n    }\n    else if(UserData.form.value.mobile.toString().length !=10){\n      this.msg = \"Phone no should be 10 numbers!!\";\n    }\n    else{\n      \n      let resultstate:any = this.service.SignupData(UserData.form.value);\n      \n      resultstate.subscribe((data: any) => {\n        // if (data.error == null) {\n          this.msg = \"Successfully Signed Up!!\";\n          this.num = 1;\n        // }\n        // else {\n        //   // console.log(data);\n        //   // this.msg = \"Somthing went Wrong!!\";\n        //   // this.num = 0;\n        // }\n      },(error)=>{\n        console.log(error);\n          this.msg = \"Somthing went Wrong!!\";\n          this.num = 0;\n      });\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}